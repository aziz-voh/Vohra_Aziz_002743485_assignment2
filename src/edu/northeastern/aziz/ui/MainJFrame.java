/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.northeastern.aziz.ui;

import edu.northeastern.aziz.Doctor.Doctor;
import edu.northeastern.aziz.Doctor.DoctorDirectory;
import edu.northeastern.aziz.Encounter.Encounter;
import edu.northeastern.aziz.Encounter.EncounterHistory;
import edu.northeastern.aziz.Encounter.VitalSigns;
import edu.northeastern.aziz.Hospital.Hospital;
import edu.northeastern.aziz.Hospital.HospitalDirectory;
import edu.northeastern.aziz.Model.City;
import edu.northeastern.aziz.Model.CityDirectory;
import edu.northeastern.aziz.Model.Community;
import edu.northeastern.aziz.Model.CommunityDirectory;
import edu.northeastern.aziz.Model.House;
import edu.northeastern.aziz.Model.HouseDirectory;
import edu.northeastern.aziz.Patient.Patient;
import edu.northeastern.aziz.Patient.PatientDirectory;
import edu.northeastern.aziz.Persona.CommunityAdmin;
import edu.northeastern.aziz.Persona.CommunityAdminDirectory;
import edu.northeastern.aziz.Persona.HospitalAdmin;
import edu.northeastern.aziz.Persona.HospitalAdminDirectory;
import edu.northeastern.aziz.Persona.SystemAdmin;
import edu.northeastern.aziz.Persona.SystemAdminDirectory;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aziz
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    PatientDirectory patientDir;
    DoctorDirectory docDir;
    CommunityAdminDirectory commAdminDir;
    SystemAdminDirectory sysDir;
    HospitalAdminDirectory hosAdminDir;

    CityDirectory cityDir;
    CommunityDirectory commDir;
    HouseDirectory houseDir;

    HospitalDirectory hospDir;

    Doctor loginDoc;
    Patient loginPatient;
    CommunityAdmin loginCommAdmin;
    HospitalAdmin loginHosAdmin;

    EncounterHistory selectedPatientEncHist;

    public MainJFrame() {
        initComponents();
        //System.out.println("----Main frame----");

        this.cityDir = new CityDirectory();
        this.commDir = new CommunityDirectory(cityDir);
        this.houseDir = new HouseDirectory(commDir);

        this.hospDir = new HospitalDirectory(cityDir, commDir);

        this.patientDir = new PatientDirectory(houseDir);
        this.docDir = new DoctorDirectory(hospDir);
        this.commAdminDir = new CommunityAdminDirectory();
        this.sysDir = new SystemAdminDirectory();
        this.hosAdminDir = new HospitalAdminDirectory();

        pnlHome.setVisible(true);
        pnlPatient.setVisible(false);
        pnlDoctor.setVisible(false);
        pnlSysAdmin.setVisible(false);
        pnlCommunityAdmin.setVisible(false);
        pnlHospitalAdmin.setVisible(false);
       
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        pnlHome = new javax.swing.JPanel();
        pnlLogin = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        lblLoginAs = new javax.swing.JLabel();
        comboBoxLogin = new javax.swing.JComboBox<>();
        txtUsername = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        lblLogin1 = new javax.swing.JLabel();
        pnlSysAdmin = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabCreatePerson = new javax.swing.JPanel();
        splitPaneSystemAdmin = new javax.swing.JSplitPane();
        pnlMenuBar = new javax.swing.JPanel();
        btnCreatePatient = new javax.swing.JButton();
        btnCreateDoc = new javax.swing.JButton();
        btnCreateHospAdmin = new javax.swing.JButton();
        btnCreateCommAdmin = new javax.swing.JButton();
        pnlWorkArea = new javax.swing.JPanel();
        tabManagePatient = new javax.swing.JPanel();
        scrollPanePatient = new javax.swing.JScrollPane();
        tablePatients = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel9 = new javax.swing.JPanel();
        txtPatientId = new javax.swing.JTextField();
        comboBoxgender = new javax.swing.JComboBox<>();
        txtName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblPhoneNo = new javax.swing.JLabel();
        txtPhoneNo = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblUsernamePat = new javax.swing.JLabel();
        txtUsernamePat = new javax.swing.JTextField();
        lblPatientId = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        comboBoxCity = new javax.swing.JComboBox<>();
        lblCommunity = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        comboBoxComm = new javax.swing.JComboBox<>();
        comboBoxHouse = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        lblTemp = new javax.swing.JLabel();
        txtTemp = new javax.swing.JTextField();
        lblBp = new javax.swing.JLabel();
        txtBp = new javax.swing.JTextField();
        lblRespRate = new javax.swing.JLabel();
        txtRespRate = new javax.swing.JTextField();
        lblPusleRate = new javax.swing.JLabel();
        txtPusleRate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        DateChooserEncDate = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableEncHistory = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        lblTemp3 = new javax.swing.JLabel();
        lblRespRate3 = new javax.swing.JLabel();
        txtTemp3 = new javax.swing.JTextField();
        txtRespRate3 = new javax.swing.JTextField();
        lblBp3 = new javax.swing.JLabel();
        lblPusleRate3 = new javax.swing.JLabel();
        txtPusleRate3 = new javax.swing.JTextField();
        txtBp3 = new javax.swing.JTextField();
        lblDate3 = new javax.swing.JLabel();
        DateChooserEncDate3 = new com.toedter.calendar.JDateChooser();
        btnViewEncHist = new javax.swing.JButton();
        btnEditEncHist = new javax.swing.JButton();
        btnDeleteEncHist = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        tabManageDoc = new javax.swing.JPanel();
        scrollPanePatient1 = new javax.swing.JScrollPane();
        tableDoc = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        txtDocId = new javax.swing.JTextField();
        comboBoxGenderDoc = new javax.swing.JComboBox<>();
        txtNameDoc = new javax.swing.JTextField();
        lblAge1 = new javax.swing.JLabel();
        lblGender1 = new javax.swing.JLabel();
        txtAgeDoc = new javax.swing.JTextField();
        lblPhoneNo1 = new javax.swing.JLabel();
        txtPhoneNoDoc = new javax.swing.JTextField();
        lblEmail1 = new javax.swing.JLabel();
        txtEmailDoc = new javax.swing.JTextField();
        lblUsernameDoc = new javax.swing.JLabel();
        txtUsernameDoc = new javax.swing.JTextField();
        lblDocId = new javax.swing.JLabel();
        lblName1 = new javax.swing.JLabel();
        lblHosp = new javax.swing.JLabel();
        comboBoxHosp = new javax.swing.JComboBox<>();
        btnSaveEdits = new javax.swing.JButton();
        btnViewDoc = new javax.swing.JButton();
        btnDeleteDoc = new javax.swing.JButton();
        tabCreateResources = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnAddCity = new javax.swing.JButton();
        txtComm = new javax.swing.JTextField();
        btnAddCom = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboBoxSelectCity = new javax.swing.JComboBox<>();
        comboBoxSelectCity2 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnAddHouse = new javax.swing.JButton();
        txtHouse = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        comboBoxSelectComm = new javax.swing.JComboBox<>();
        tabManageResources = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableCities = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableHouses = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tableComm = new javax.swing.JTable();
        btnViewCity = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        txtCityView = new javax.swing.JTextField();
        btnUpdateCity = new javax.swing.JButton();
        btnViewComm = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        txtCommView = new javax.swing.JTextField();
        btnUpdateComm = new javax.swing.JButton();
        btnViewHouse = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        txtHouseView = new javax.swing.JTextField();
        btnUpdateHouse = new javax.swing.JButton();
        btnDeleteCity = new javax.swing.JButton();
        btnDeleteComm = new javax.swing.JButton();
        btnDeleteHouse = new javax.swing.JButton();
        tabManageHospitals = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtHospitalName = new javax.swing.JTextField();
        comboBoxHospCity = new javax.swing.JComboBox<>();
        comboBoxHospComm = new javax.swing.JComboBox<>();
        btnAddHosp = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableHospitals = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        txtHospView = new javax.swing.JTextField();
        btnUpdateHosp = new javax.swing.JButton();
        btnDeleteHosp = new javax.swing.JButton();
        btnViewHosp = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnLogout = new javax.swing.JButton();
        pnlDoctor = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboBoxDocPat = new javax.swing.JComboBox<>();
        lblTemp1 = new javax.swing.JLabel();
        txtTemp1 = new javax.swing.JTextField();
        lblBp1 = new javax.swing.JLabel();
        txtBp1 = new javax.swing.JTextField();
        lblRespRate1 = new javax.swing.JLabel();
        txtRespRate1 = new javax.swing.JTextField();
        lblPusleRate1 = new javax.swing.JLabel();
        txtPusleRate1 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        lblDate1 = new javax.swing.JLabel();
        DateChooserEncDate1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tableEncHistory1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblName2 = new javax.swing.JLabel();
        txtDocIdD = new javax.swing.JTextField();
        comboBoxgenderD = new javax.swing.JComboBox<>();
        lblDocId1 = new javax.swing.JLabel();
        txtUsernameD = new javax.swing.JTextField();
        lblUsername1 = new javax.swing.JLabel();
        txtEmailD = new javax.swing.JTextField();
        lblEmail2 = new javax.swing.JLabel();
        txtPhoneNoD = new javax.swing.JTextField();
        lblPhoneNo2 = new javax.swing.JLabel();
        txtAgeD = new javax.swing.JTextField();
        txtPassD = new javax.swing.JTextField();
        lblAge2 = new javax.swing.JLabel();
        lblGender2 = new javax.swing.JLabel();
        txtNameD = new javax.swing.JTextField();
        lblPass1 = new javax.swing.JLabel();
        lblHosp1 = new javax.swing.JLabel();
        comboBoxHospD = new javax.swing.JComboBox<>();
        btnCreateD = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnLogout1 = new javax.swing.JButton();
        pnlPatient = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        lblName3 = new javax.swing.JLabel();
        txtPatientIdP = new javax.swing.JTextField();
        comboBoxgenderP = new javax.swing.JComboBox<>();
        lblDocId2 = new javax.swing.JLabel();
        txtUsernameP = new javax.swing.JTextField();
        lblUsername2 = new javax.swing.JLabel();
        txtEmailP = new javax.swing.JTextField();
        lblEmail3 = new javax.swing.JLabel();
        txtPhoneNoP = new javax.swing.JTextField();
        lblPhoneNo3 = new javax.swing.JLabel();
        txtAgeP = new javax.swing.JTextField();
        txtPassP = new javax.swing.JTextField();
        lblAge3 = new javax.swing.JLabel();
        lblGender3 = new javax.swing.JLabel();
        txtNameP = new javax.swing.JTextField();
        lblPass2 = new javax.swing.JLabel();
        btnCreateD1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblHospList = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblDocList = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblNearbyDoc = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        lblTemp2 = new javax.swing.JLabel();
        txtTemp2 = new javax.swing.JTextField();
        lblBp2 = new javax.swing.JLabel();
        txtBp2 = new javax.swing.JTextField();
        lblRespRate2 = new javax.swing.JLabel();
        txtRespRate2 = new javax.swing.JTextField();
        lblPusleRate2 = new javax.swing.JLabel();
        txtPusleRate2 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        lblDate2 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tableEncHistory2 = new javax.swing.JTable();
        dateChooserPatPanel = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        btnLogout2 = new javax.swing.JButton();
        pnlHospitalAdmin = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        lblName4 = new javax.swing.JLabel();
        comboBoxgenderHA = new javax.swing.JComboBox<>();
        txtUsernameHA = new javax.swing.JTextField();
        lblUsername3 = new javax.swing.JLabel();
        txtEmailHA = new javax.swing.JTextField();
        lblEmail4 = new javax.swing.JLabel();
        txtPhoneNoHA = new javax.swing.JTextField();
        lblPhoneNo4 = new javax.swing.JLabel();
        txtAgeHA = new javax.swing.JTextField();
        txtPassHA = new javax.swing.JTextField();
        lblAge4 = new javax.swing.JLabel();
        lblGender4 = new javax.swing.JLabel();
        txtNameHA = new javax.swing.JTextField();
        lblPass3 = new javax.swing.JLabel();
        btnCreateHA = new javax.swing.JButton();
        tabCreatePerson1 = new javax.swing.JPanel();
        splitPaneSystemAdmin1 = new javax.swing.JSplitPane();
        pnlMenuBar1 = new javax.swing.JPanel();
        btnCreatePatient1 = new javax.swing.JButton();
        btnCreateDoc1 = new javax.swing.JButton();
        pnlWorkArea1 = new javax.swing.JPanel();
        tabManageHospitals1 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        txtHospitalName1 = new javax.swing.JTextField();
        comboBoxHospCity1 = new javax.swing.JComboBox<>();
        comboBoxHospComm1 = new javax.swing.JComboBox<>();
        btnAddHosp1 = new javax.swing.JButton();
        jLabel63 = new javax.swing.JLabel();
        jScrollPane24 = new javax.swing.JScrollPane();
        tableHospitals1 = new javax.swing.JTable();
        jLabel64 = new javax.swing.JLabel();
        txtHospView1 = new javax.swing.JTextField();
        btnUpdateHosp1 = new javax.swing.JButton();
        btnDeleteHosp1 = new javax.swing.JButton();
        btnViewHosp1 = new javax.swing.JButton();
        tabManagePatient1 = new javax.swing.JPanel();
        scrollPanePatient2 = new javax.swing.JScrollPane();
        tablePatients1 = new javax.swing.JTable();
        jScrollPane18 = new javax.swing.JScrollPane();
        jPanel15 = new javax.swing.JPanel();
        txtPatientId1 = new javax.swing.JTextField();
        comboBoxgender1 = new javax.swing.JComboBox<>();
        txtName1 = new javax.swing.JTextField();
        lblAge5 = new javax.swing.JLabel();
        lblGender5 = new javax.swing.JLabel();
        txtAge1 = new javax.swing.JTextField();
        lblPhoneNo5 = new javax.swing.JLabel();
        txtPhoneNo1 = new javax.swing.JTextField();
        lblEmail5 = new javax.swing.JLabel();
        txtEmail1 = new javax.swing.JTextField();
        lblUsernamePat1 = new javax.swing.JLabel();
        txtUsernamePat1 = new javax.swing.JTextField();
        lblPatientId1 = new javax.swing.JLabel();
        lblName5 = new javax.swing.JLabel();
        lblCity1 = new javax.swing.JLabel();
        comboBoxCity1 = new javax.swing.JComboBox<>();
        lblCommunity1 = new javax.swing.JLabel();
        lblHouse1 = new javax.swing.JLabel();
        comboBoxComm1 = new javax.swing.JComboBox<>();
        comboBoxHouse1 = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        lblTemp4 = new javax.swing.JLabel();
        txtTemp4 = new javax.swing.JTextField();
        lblBp4 = new javax.swing.JLabel();
        txtBp4 = new javax.swing.JTextField();
        lblRespRate4 = new javax.swing.JLabel();
        txtRespRate4 = new javax.swing.JTextField();
        lblPusleRate4 = new javax.swing.JLabel();
        txtPusleRate4 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        lblDate4 = new javax.swing.JLabel();
        DateChooserEncDate2 = new com.toedter.calendar.JDateChooser();
        jScrollPane19 = new javax.swing.JScrollPane();
        tableEncHistory4 = new javax.swing.JTable();
        btnSave1 = new javax.swing.JButton();
        btnView1 = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        tabManageDoc1 = new javax.swing.JPanel();
        scrollPanePatient3 = new javax.swing.JScrollPane();
        tableDoc1 = new javax.swing.JTable();
        jScrollPane20 = new javax.swing.JScrollPane();
        jPanel16 = new javax.swing.JPanel();
        txtDocId1 = new javax.swing.JTextField();
        comboBoxGenderDoc1 = new javax.swing.JComboBox<>();
        txtNameDoc1 = new javax.swing.JTextField();
        lblAge6 = new javax.swing.JLabel();
        lblGender6 = new javax.swing.JLabel();
        txtAgeDoc1 = new javax.swing.JTextField();
        lblPhoneNo6 = new javax.swing.JLabel();
        txtPhoneNoDoc1 = new javax.swing.JTextField();
        lblEmail6 = new javax.swing.JLabel();
        txtEmailDoc1 = new javax.swing.JTextField();
        lblUsernameDoc1 = new javax.swing.JLabel();
        txtUsernameDoc1 = new javax.swing.JTextField();
        lblDocId4 = new javax.swing.JLabel();
        lblName6 = new javax.swing.JLabel();
        lblHosp2 = new javax.swing.JLabel();
        comboBoxHosp1 = new javax.swing.JComboBox<>();
        btnSaveEdits1 = new javax.swing.JButton();
        btnViewDoc1 = new javax.swing.JButton();
        btnDeleteDoc1 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        btnLogout3 = new javax.swing.JButton();
        pnlCommunityAdmin = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel();
        lblName7 = new javax.swing.JLabel();
        comboBoxgenderCA = new javax.swing.JComboBox<>();
        txtUsernameCA = new javax.swing.JTextField();
        lblUsername4 = new javax.swing.JLabel();
        txtEmailCA = new javax.swing.JTextField();
        lblEmail7 = new javax.swing.JLabel();
        txtPhoneNoCA = new javax.swing.JTextField();
        lblPhoneNo7 = new javax.swing.JLabel();
        txtAgeCA = new javax.swing.JTextField();
        txtPassCA = new javax.swing.JTextField();
        lblAge7 = new javax.swing.JLabel();
        lblGender7 = new javax.swing.JLabel();
        txtNameCA = new javax.swing.JTextField();
        lblPass4 = new javax.swing.JLabel();
        btnCreateHA1 = new javax.swing.JButton();
        tabCreateResources1 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtCity1 = new javax.swing.JTextField();
        btnAddCity1 = new javax.swing.JButton();
        txtComm1 = new javax.swing.JTextField();
        btnAddCom1 = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        comboBoxSelectCity1 = new javax.swing.JComboBox<>();
        comboBoxSelectCity3 = new javax.swing.JComboBox<>();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        btnAddHouse1 = new javax.swing.JButton();
        txtHouse1 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        comboBoxSelectComm1 = new javax.swing.JComboBox<>();
        tabManageResources1 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        tableCities1 = new javax.swing.JTable();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        tableHouses1 = new javax.swing.JTable();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        tableComm1 = new javax.swing.JTable();
        btnViewCity1 = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        txtCityView1 = new javax.swing.JTextField();
        btnUpdateCity1 = new javax.swing.JButton();
        btnViewComm1 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        txtCommView1 = new javax.swing.JTextField();
        btnUpdateComm1 = new javax.swing.JButton();
        btnViewHouse1 = new javax.swing.JButton();
        jLabel56 = new javax.swing.JLabel();
        txtHouseView1 = new javax.swing.JTextField();
        btnUpdateHouse1 = new javax.swing.JButton();
        btnDeleteCity1 = new javax.swing.JButton();
        btnDeleteComm1 = new javax.swing.JButton();
        btnDeleteHouse1 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        btnLogout4 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlLogin.setBackground(new java.awt.Color(153, 204, 255));
        pnlLogin.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N

        lblLogin.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        lblLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogin.setText("Login Page");

        lblUsername.setText("Username");

        lblPass.setText("Password");

        lblLoginAs.setText("Login As");

        comboBoxLogin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Doctor", "Hospital Admin", "Community Admin", "System Admin" }));
        comboBoxLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxLoginActionPerformed(evt);
            }
        });

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblLogin1.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        lblLogin1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogin1.setText("Hospital Resource Management ");

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addContainerGap(531, Short.MAX_VALUE)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                        .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                                .addComponent(lblLoginAs)
                                .addGap(92, 92, 92))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                                    .addComponent(lblPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnLogin)
                                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                                    .addComponent(lblUsername)
                                    .addGap(17, 17, 17)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(591, 591, 591))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                        .addComponent(comboBoxLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(632, 632, 632))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                        .addComponent(lblLogin1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(529, 529, 529))
                    .addGroup(pnlLoginLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(lblLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(lblLogin1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(lblLogin)
                .addGap(71, 71, 71)
                .addComponent(lblLoginAs)
                .addGap(18, 18, 18)
                .addComponent(comboBoxLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblUsername))
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPass))
                .addGap(76, 76, 76)
                .addComponent(btnLogin)
                .addContainerGap(601, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(pnlHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1450, 1200));

        pnlSysAdmin.setBackground(new java.awt.Color(255, 204, 153));
        pnlSysAdmin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("System Admin Panel");
        pnlSysAdmin.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 30, 1430, 30));

        jTabbedPane1.setBackground(new java.awt.Color(255, 204, 102));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        tabCreatePerson.setBackground(new java.awt.Color(255, 204, 102));

        pnlMenuBar.setBackground(new java.awt.Color(255, 204, 102));

        btnCreatePatient.setText("Create Patient");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });

        btnCreateDoc.setText("Create Doctor");
        btnCreateDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDocActionPerformed(evt);
            }
        });

        btnCreateHospAdmin.setText("Create Hospital Admin");
        btnCreateHospAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHospAdminActionPerformed(evt);
            }
        });

        btnCreateCommAdmin.setText("Create Community Admin");
        btnCreateCommAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCommAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuBarLayout = new javax.swing.GroupLayout(pnlMenuBar);
        pnlMenuBar.setLayout(pnlMenuBarLayout);
        pnlMenuBarLayout.setHorizontalGroup(
            pnlMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMenuBarLayout.createSequentialGroup()
                        .addComponent(btnCreatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnCreateCommAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateHospAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMenuBarLayout.setVerticalGroup(
            pnlMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuBarLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(btnCreatePatient)
                .addGap(18, 18, 18)
                .addComponent(btnCreateDoc)
                .addGap(18, 18, 18)
                .addComponent(btnCreateHospAdmin)
                .addGap(18, 18, 18)
                .addComponent(btnCreateCommAdmin)
                .addContainerGap(709, Short.MAX_VALUE))
        );

        splitPaneSystemAdmin.setLeftComponent(pnlMenuBar);

        pnlWorkArea.setBackground(new java.awt.Color(255, 204, 102));

        javax.swing.GroupLayout pnlWorkAreaLayout = new javax.swing.GroupLayout(pnlWorkArea);
        pnlWorkArea.setLayout(pnlWorkAreaLayout);
        pnlWorkAreaLayout.setHorizontalGroup(
            pnlWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1256, Short.MAX_VALUE)
        );
        pnlWorkAreaLayout.setVerticalGroup(
            pnlWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1007, Short.MAX_VALUE)
        );

        splitPaneSystemAdmin.setRightComponent(pnlWorkArea);

        javax.swing.GroupLayout tabCreatePersonLayout = new javax.swing.GroupLayout(tabCreatePerson);
        tabCreatePerson.setLayout(tabCreatePersonLayout);
        tabCreatePersonLayout.setHorizontalGroup(
            tabCreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreatePersonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPaneSystemAdmin)
                .addContainerGap())
        );
        tabCreatePersonLayout.setVerticalGroup(
            tabCreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreatePersonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPaneSystemAdmin)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Create Entities", tabCreatePerson);

        tabManagePatient.setBackground(new java.awt.Color(255, 204, 102));

        tablePatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Email", "Phone No", "Gender", "City", "Community"
            }
        ));
        scrollPanePatient.setViewportView(tablePatients);

        jPanel9.setBackground(new java.awt.Color(255, 204, 102));

        comboBoxgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblAge.setText("Age");

        lblGender.setText("Gender");

        lblPhoneNo.setText("Phone No");

        lblEmail.setText("Email");

        lblUsernamePat.setText("Username");

        lblPatientId.setText("Patient ID");

        lblName.setText("Name");

        lblCity.setText("City");

        comboBoxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCityActionPerformed(evt);
            }
        });

        lblCommunity.setText("Community");

        lblHouse.setText("House");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel5.setText("Vital Signs History");

        lblTemp.setText("Temperature");

        lblBp.setText("Blood Pressure");

        lblRespRate.setText("Respiration Rate");

        txtRespRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRateActionPerformed(evt);
            }
        });

        lblPusleRate.setText("Pulse Rate");

        txtPusleRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPusleRateActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel10.setText("Vital Signs");

        lblDate.setText("Encounter Date");

        tableEncHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Temperature", "Blood Pressure", "Respiration Rate", "Pulse Rate", "Encounter Date"
            }
        ));
        jScrollPane3.setViewportView(tableEncHistory);

        btnSave.setText("Edit Changes");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblTemp3.setText("Temperature");

        lblRespRate3.setText("Respiration Rate");

        txtRespRate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRate3ActionPerformed(evt);
            }
        });

        lblBp3.setText("Blood Pressure");

        lblPusleRate3.setText("Pulse Rate");

        txtPusleRate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPusleRate3ActionPerformed(evt);
            }
        });

        lblDate3.setText("Encounter Date");

        btnViewEncHist.setText("View");
        btnViewEncHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncHistActionPerformed(evt);
            }
        });

        btnEditEncHist.setText("Update");
        btnEditEncHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEncHistActionPerformed(evt);
            }
        });

        btnDeleteEncHist.setText("Delete");
        btnDeleteEncHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEncHistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(lblName)
                                        .addGap(78, 78, 78)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(lblAge)
                                        .addGap(90, 90, 90)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEmail)
                                            .addComponent(lblPhoneNo))
                                        .addGap(56, 56, 56)
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(lblGender)
                                        .addGap(69, 69, 69)
                                        .addComponent(comboBoxgender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(97, 97, 97)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblPatientId)
                                    .addComponent(txtPatientId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(lblCommunity)
                                        .addGap(45, 45, 45)
                                        .addComponent(comboBoxComm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCity)
                                            .addComponent(lblHouse))
                                        .addGap(74, 74, 74)
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(comboBoxHouse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(lblUsernamePat)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtUsernamePat, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel10)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblRespRate)
                                            .addComponent(lblDate))
                                        .addGap(45, 45, 45)
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DateChooserEncDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRespRate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(lblTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBp)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(lblPusleRate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPusleRate, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBp, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(359, 359, 359)
                        .addComponent(btnSave)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(lblTemp3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(txtTemp3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRespRate3)
                                    .addComponent(lblBp3)
                                    .addComponent(lblPusleRate3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDate3))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRespRate3)
                                    .addComponent(txtBp3)
                                    .addComponent(txtPusleRate3)
                                    .addComponent(DateChooserEncDate3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(btnViewEncHist)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditEncHist)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteEncHist)))
                        .addGap(480, 480, 480))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblName)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAge))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmail))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPhoneNo))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblGender)
                                    .addComponent(comboBoxgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addComponent(jLabel10)
                                .addGap(31, 31, 31)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTemp)
                                    .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBp)
                                    .addComponent(txtBp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCity)
                                    .addComponent(comboBoxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCommunity)
                                    .addComponent(comboBoxComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHouse)
                                    .addComponent(comboBoxHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientId))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUsernamePat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsernamePat))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRespRate)
                            .addComponent(txtRespRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPusleRate)
                            .addComponent(txtPusleRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateChooserEncDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDate))
                        .addGap(61, 61, 61)
                        .addComponent(btnSave))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTemp3)
                            .addComponent(txtTemp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRespRate3)
                            .addComponent(txtRespRate3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBp3)
                            .addComponent(txtBp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPusleRate3)
                            .addComponent(txtPusleRate3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateChooserEncDate3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDate3))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewEncHist)
                            .addComponent(btnEditEncHist)
                            .addComponent(btnDeleteEncHist))))
                .addContainerGap(648, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel9);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManagePatientLayout = new javax.swing.GroupLayout(tabManagePatient);
        tabManagePatient.setLayout(tabManagePatientLayout);
        tabManagePatientLayout.setHorizontalGroup(
            tabManagePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManagePatientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabManagePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManagePatientLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(tabManagePatientLayout.createSequentialGroup()
                        .addComponent(scrollPanePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 1245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(tabManagePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(51, Short.MAX_VALUE))))
        );
        tabManagePatientLayout.setVerticalGroup(
            tabManagePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManagePatientLayout.createSequentialGroup()
                .addGroup(tabManagePatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManagePatientLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnView)
                        .addGap(23, 23, 23)
                        .addComponent(btnDelete))
                    .addGroup(tabManagePatientLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(scrollPanePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Patient Data", tabManagePatient);

        tabManageDoc.setBackground(new java.awt.Color(255, 204, 102));

        tableDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Email", "Phone No", "Gender", "Doctor ID", "Hospital"
            }
        ));
        scrollPanePatient1.setViewportView(tableDoc);

        jPanel10.setBackground(new java.awt.Color(255, 204, 102));

        comboBoxGenderDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        txtNameDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameDocActionPerformed(evt);
            }
        });

        lblAge1.setText("Age");

        lblGender1.setText("Gender");

        lblPhoneNo1.setText("Phone No");

        lblEmail1.setText("Email");

        lblUsernameDoc.setText("Username");

        lblDocId.setText("Doctor ID");

        lblName1.setText("Name");

        lblHosp.setText("Hospital");

        comboBoxHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHospActionPerformed(evt);
            }
        });

        btnSaveEdits.setText("Edit Changes");
        btnSaveEdits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEditsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(lblName1)
                                .addGap(78, 78, 78)
                                .addComponent(txtNameDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(lblAge1)
                                .addGap(90, 90, 90)
                                .addComponent(txtAgeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmail1)
                                    .addComponent(lblPhoneNo1))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhoneNoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmailDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(lblGender1)
                                .addGap(69, 69, 69)
                                .addComponent(comboBoxGenderDoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(97, 97, 97)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDocId)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(lblUsernameDoc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(txtUsernameDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(lblHosp)
                                .addGap(77, 77, 77)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboBoxHosp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDocId, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(667, 667, 667)
                        .addComponent(btnSaveEdits)))
                .addContainerGap(895, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName1)
                            .addComponent(txtNameDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAgeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmailDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhoneNoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoneNo1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender1)
                            .addComponent(comboBoxGenderDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHosp)
                            .addComponent(comboBoxHosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDocId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDocId))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsernameDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsernameDoc))))
                .addGap(120, 120, 120)
                .addComponent(btnSaveEdits)
                .addContainerGap(809, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel10);

        btnViewDoc.setText("View");
        btnViewDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDocActionPerformed(evt);
            }
        });

        btnDeleteDoc.setText("Delete");
        btnDeleteDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManageDocLayout = new javax.swing.GroupLayout(tabManageDoc);
        tabManageDoc.setLayout(tabManageDocLayout);
        tabManageDocLayout.setHorizontalGroup(
            tabManageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageDocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabManageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageDocLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(tabManageDocLayout.createSequentialGroup()
                        .addComponent(scrollPanePatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 1245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(tabManageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnViewDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(51, Short.MAX_VALUE))))
        );
        tabManageDocLayout.setVerticalGroup(
            tabManageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageDocLayout.createSequentialGroup()
                .addGroup(tabManageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageDocLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnViewDoc)
                        .addGap(29, 29, 29)
                        .addComponent(btnDeleteDoc))
                    .addGroup(tabManageDocLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(scrollPanePatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Doctor Data", tabManageDoc);

        tabCreateResources.setBackground(new java.awt.Color(255, 204, 102));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel6.setText("Create City");

        btnAddCity.setText("Add");
        btnAddCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCityActionPerformed(evt);
            }
        });

        btnAddCom.setText("Add");
        btnAddCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddComActionPerformed(evt);
            }
        });

        jLabel8.setText("City Name:");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel9.setText("Create Community");

        jLabel11.setText("Community Name:");

        jLabel12.setText("Select City:");

        comboBoxSelectCity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxSelectCityMouseClicked(evt);
            }
        });
        comboBoxSelectCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSelectCityActionPerformed(evt);
            }
        });

        comboBoxSelectCity2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxSelectCity2MouseClicked(evt);
            }
        });
        comboBoxSelectCity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSelectCity2ActionPerformed(evt);
            }
        });

        jLabel13.setText("Select City:");

        jLabel14.setText("House Name:");

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel15.setText("Create House");

        btnAddHouse.setText("Add");
        btnAddHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHouseActionPerformed(evt);
            }
        });

        jLabel16.setText("Select Community:");

        comboBoxSelectComm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxSelectCommMouseClicked(evt);
            }
        });
        comboBoxSelectComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSelectCommActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabCreateResourcesLayout = new javax.swing.GroupLayout(tabCreateResources);
        tabCreateResources.setLayout(tabCreateResourcesLayout);
        tabCreateResourcesLayout.setHorizontalGroup(
            tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreateResourcesLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6)
                    .addComponent(jLabel15)
                    .addGroup(tabCreateResourcesLayout.createSequentialGroup()
                        .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(tabCreateResourcesLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabCreateResourcesLayout.createSequentialGroup()
                                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabCreateResourcesLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18))
                                    .addGroup(tabCreateResourcesLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(59, 59, 59)))
                                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtComm)
                                    .addComponent(comboBoxSelectCity, 0, 196, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddCity)
                            .addComponent(btnAddCom)))
                    .addGroup(tabCreateResourcesLayout.createSequentialGroup()
                        .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabCreateResourcesLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxSelectComm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabCreateResourcesLayout.createSequentialGroup()
                                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addGap(47, 47, 47)
                                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHouse)
                                    .addComponent(comboBoxSelectCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(btnAddHouse)))
                .addContainerGap(970, Short.MAX_VALUE))
        );
        tabCreateResourcesLayout.setVerticalGroup(
            tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreateResourcesLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCity)
                    .addComponent(jLabel8))
                .addGap(77, 77, 77)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCom)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(comboBoxSelectCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddHouse)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(comboBoxSelectCity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabCreateResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(comboBoxSelectComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(489, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Resources", tabCreateResources);

        tabManageResources.setBackground(new java.awt.Color(255, 204, 102));

        tableCities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "City Name"
            }
        ));
        jScrollPane5.setViewportView(tableCities);

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel7.setText("Cities");

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel17.setText("Communities");

        tableHouses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "House Name", "Community", "City"
            }
        ));
        jScrollPane6.setViewportView(tableHouses);

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel18.setText("Houses");

        tableComm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Community Name", "City"
            }
        ));
        jScrollPane7.setViewportView(tableComm);

        btnViewCity.setText("View");
        btnViewCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCityActionPerformed(evt);
            }
        });

        jLabel25.setText("City Name:");

        btnUpdateCity.setText("Update");
        btnUpdateCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCityActionPerformed(evt);
            }
        });

        btnViewComm.setText("View");
        btnViewComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCommActionPerformed(evt);
            }
        });

        jLabel26.setText("Community Name:");

        btnUpdateComm.setText("Update");
        btnUpdateComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCommActionPerformed(evt);
            }
        });

        btnViewHouse.setText("View");
        btnViewHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHouseActionPerformed(evt);
            }
        });

        jLabel27.setText("House Name:");

        btnUpdateHouse.setText("Update");
        btnUpdateHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHouseActionPerformed(evt);
            }
        });

        btnDeleteCity.setText("Delete");
        btnDeleteCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCityActionPerformed(evt);
            }
        });

        btnDeleteComm.setText("Delete");
        btnDeleteComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCommActionPerformed(evt);
            }
        });

        btnDeleteHouse.setText("Delete");
        btnDeleteHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHouseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManageResourcesLayout = new javax.swing.GroupLayout(tabManageResources);
        tabManageResources.setLayout(tabManageResourcesLayout);
        tabManageResourcesLayout.setHorizontalGroup(
            tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageResourcesLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane6))
                .addGap(86, 86, 86)
                .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewCity)
                    .addComponent(btnViewHouse)
                    .addComponent(btnViewComm)
                    .addGroup(tabManageResourcesLayout.createSequentialGroup()
                        .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabManageResourcesLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(18, 18, 18)
                                .addComponent(txtHouseView))
                            .addGroup(tabManageResourcesLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(18, 18, 18)
                                .addComponent(txtCityView, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabManageResourcesLayout.createSequentialGroup()
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCommView, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabManageResourcesLayout.createSequentialGroup()
                                .addComponent(btnUpdateHouse)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteHouse))
                            .addGroup(tabManageResourcesLayout.createSequentialGroup()
                                .addComponent(btnUpdateComm)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteComm))
                            .addGroup(tabManageResourcesLayout.createSequentialGroup()
                                .addComponent(btnUpdateCity)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteCity)))))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        tabManageResourcesLayout.setVerticalGroup(
            tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageResourcesLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel7)
                .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageResourcesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabManageResourcesLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnViewCity)
                        .addGap(18, 18, 18)
                        .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtCityView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateCity)
                            .addComponent(btnDeleteCity))))
                .addGap(39, 39, 39)
                .addComponent(jLabel17)
                .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageResourcesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabManageResourcesLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnViewComm)
                        .addGap(18, 18, 18)
                        .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtCommView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateComm)
                            .addComponent(btnDeleteComm))))
                .addGap(37, 37, 37)
                .addComponent(jLabel18)
                .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageResourcesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabManageResourcesLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnViewHouse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabManageResourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(txtHouseView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateHouse)
                            .addComponent(btnDeleteHouse))))
                .addContainerGap(438, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Resources", tabManageResources);

        tabManageHospitals.setBackground(new java.awt.Color(255, 204, 102));

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel19.setText("Create Hospital");

        jLabel20.setText("Hospital Name:");

        jLabel21.setText("Select City:");

        jLabel22.setText("Select Community:");

        comboBoxHospCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHospCityActionPerformed(evt);
            }
        });

        comboBoxHospComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHospCommActionPerformed(evt);
            }
        });

        btnAddHosp.setText("Add");
        btnAddHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHospActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel23.setText("View Hospitals");

        tableHospitals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "Community", "City"
            }
        ));
        jScrollPane8.setViewportView(tableHospitals);

        jLabel24.setText("Hospital Name:");

        btnUpdateHosp.setText("Update");
        btnUpdateHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHospActionPerformed(evt);
            }
        });

        btnDeleteHosp.setText("Delete");
        btnDeleteHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHospActionPerformed(evt);
            }
        });

        btnViewHosp.setText("View");
        btnViewHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHospActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManageHospitalsLayout = new javax.swing.GroupLayout(tabManageHospitals);
        tabManageHospitals.setLayout(tabManageHospitalsLayout);
        tabManageHospitalsLayout.setHorizontalGroup(
            tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageHospitalsLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageHospitalsLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(txtHospView, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewHosp)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateHosp)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteHosp))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel19)
                    .addGroup(tabManageHospitalsLayout.createSequentialGroup()
                        .addGroup(tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel22))
                        .addGap(27, 27, 27)
                        .addGroup(tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comboBoxHospComm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHospitalName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxHospCity, 0, 196, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAddHosp)))
                .addContainerGap(749, Short.MAX_VALUE))
        );
        tabManageHospitalsLayout.setVerticalGroup(
            tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageHospitalsLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addGroup(tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddHosp)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(comboBoxHospCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(comboBoxHospComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(tabManageHospitalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtHospView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateHosp)
                    .addComponent(btnDeleteHosp)
                    .addComponent(btnViewHosp))
                .addContainerGap(506, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Hospitals", tabManageHospitals);

        pnlSysAdmin.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 144, 1440, 1050));
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(1323, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addContainerGap())
        );

        pnlSysAdmin.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1438, 50));

        getContentPane().add(pnlSysAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 4, 1440, 1190));

        pnlDoctor.setBackground(new java.awt.Color(255, 204, 153));
        pnlDoctor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Doctor Panel");
        pnlDoctor.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 30, 1430, 30));

        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 204, 102));

        jLabel2.setText("Select Patient");

        comboBoxDocPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDocPatActionPerformed(evt);
            }
        });

        lblTemp1.setText("Temperature");

        lblBp1.setText("Blood Pressure");

        lblRespRate1.setText("Respiration Rate");

        txtRespRate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRate1ActionPerformed(evt);
            }
        });

        lblPusleRate1.setText("Pulse Rate");

        txtPusleRate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPusleRate1ActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel29.setText("Fill Vital Signs");

        lblDate1.setText("Encounter Date");

        jButton1.setText("Create New Encounter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel30.setText("View Patients Encounter History");

        tableEncHistory1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Temperature", "Blood Pressure", "Respiration Rate", "Pulse Rate", "Encounter Date"
            }
        ));
        jScrollPane9.setViewportView(tableEncHistory1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(372, 372, 372))
                        .addComponent(jScrollPane9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxDocPat, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblRespRate1)
                                            .addComponent(lblDate1))
                                        .addGap(45, 45, 45)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DateChooserEncDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRespRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(lblTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(txtTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(109, 109, 109)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBp1)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(lblPusleRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPusleRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBp1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(112, 112, 112)
                        .addComponent(jButton1)))
                .addContainerGap(328, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboBoxDocPat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jLabel29)
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTemp1)
                            .addComponent(txtTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRespRate1)
                            .addComponent(txtRespRate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBp1)
                            .addComponent(txtBp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPusleRate1)
                            .addComponent(txtPusleRate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateChooserEncDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate1))
                .addGap(52, 52, 52)
                .addComponent(jLabel30)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(477, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Fill Vital Signs", jPanel4);

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        lblName2.setText("Name");

        comboBoxgenderD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        lblDocId1.setText("Doctor ID");

        lblUsername1.setText("Username");

        lblEmail2.setText("Email");

        lblPhoneNo2.setText("Phone No");

        txtPassD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassDActionPerformed(evt);
            }
        });

        lblAge2.setText("Age");

        lblGender2.setText("Gender");

        txtNameD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameDActionPerformed(evt);
            }
        });

        lblPass1.setText("Password");

        lblHosp1.setText("Hospital");

        btnCreateD.setText("Update");
        btnCreateD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGap(114, 114, 114)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsernameD)
                                .addComponent(txtPassD)
                                .addComponent(txtDocIdD)
                                .addComponent(comboBoxHospD, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblName2)
                                .addGap(78, 78, 78)
                                .addComponent(txtNameD, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblAge2)
                                .addGap(90, 90, 90)
                                .addComponent(txtAgeD, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblGender2)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblEmail2)
                                    .addGap(80, 80, 80)
                                    .addComponent(txtEmailD, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblPhoneNo2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPhoneNoD, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblDocId1)
                            .addComponent(lblUsername1)
                            .addComponent(lblPass1)
                            .addComponent(comboBoxgenderD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHosp1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(464, 464, 464)
                        .addComponent(btnCreateD)))
                .addContainerGap(749, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName2)
                    .addComponent(txtNameD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgeD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge2))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail2))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhoneNoD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNo2))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender2)
                    .addComponent(comboBoxgenderD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDocIdD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDocId1))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsernameD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername1))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPass1))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHosp1)
                    .addComponent(comboBoxHospD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCreateD)
                .addContainerGap(478, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Manage Profile", jPanel2);

        pnlDoctor.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 144, 1440, 1050));

        jPanel3.setBackground(new java.awt.Color(255, 204, 153));

        btnLogout1.setText("Logout");
        btnLogout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(1323, Short.MAX_VALUE)
                .addComponent(btnLogout1)
                .addGap(43, 43, 43))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btnLogout1)
                .addContainerGap())
        );

        pnlDoctor.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1438, 50));

        getContentPane().add(pnlDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 4, 1440, 1190));

        pnlPatient.setBackground(new java.awt.Color(255, 204, 204));
        pnlPatient.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Patient Panel");
        pnlPatient.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 30, 1430, 30));

        jTabbedPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane3MouseClicked(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(255, 204, 102));

        lblName3.setText("Name");

        comboBoxgenderP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        lblDocId2.setText("Patient ID");

        lblUsername2.setText("Username");

        lblEmail3.setText("Email");

        lblPhoneNo3.setText("Phone No");

        txtPassP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassPActionPerformed(evt);
            }
        });

        lblAge3.setText("Age");

        lblGender3.setText("Gender");

        txtNameP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamePActionPerformed(evt);
            }
        });

        lblPass2.setText("Password");

        btnCreateD1.setText("Update");
        btnCreateD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateD1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                            .addGap(114, 114, 114)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsernameP, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                .addComponent(txtPassP)
                                .addComponent(txtPatientIdP)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(lblName3)
                                .addGap(78, 78, 78)
                                .addComponent(txtNameP, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(lblAge3)
                                .addGap(90, 90, 90)
                                .addComponent(txtAgeP, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblGender3)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(lblEmail3)
                                    .addGap(80, 80, 80)
                                    .addComponent(txtEmailP, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(lblPhoneNo3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPhoneNoP, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblDocId2)
                            .addComponent(lblUsername2)
                            .addComponent(lblPass2)
                            .addComponent(comboBoxgenderP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(464, 464, 464)
                        .addComponent(btnCreateD1)))
                .addContainerGap(749, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName3)
                    .addComponent(txtNameP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgeP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge3))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail3))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhoneNoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNo3))
                .addGap(34, 34, 34)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender3)
                    .addComponent(comboBoxgenderP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPatientIdP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDocId2))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsernameP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername2))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPass2))
                .addGap(65, 65, 65)
                .addComponent(btnCreateD1)
                .addContainerGap(481, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Manage Profile", jPanel6);

        jPanel8.setBackground(new java.awt.Color(255, 204, 102));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("List of All Hospitals");

        tblHospList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "Community", "City"
            }
        ));
        jScrollPane10.setViewportView(tblHospList);

        jLabel32.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel32.setText("List of All Doctors");

        tblDocList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor Name", "Email", "Phone No", "Hospital"
            }
        ));
        jScrollPane11.setViewportView(tblDocList);

        jLabel33.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel33.setText("Nearby Doctors and Hospitals");

        tblNearbyDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor Name", "Email", "Phone No", "Hospital"
            }
        ));
        jScrollPane12.setViewportView(tblNearbyDoc);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                    .addComponent(jScrollPane10))
                .addContainerGap(597, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel33)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(445, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("View Hospitas and Doctors", jPanel8);

        jPanel5.setBackground(new java.awt.Color(255, 204, 102));

        lblTemp2.setText("Temperature");

        lblBp2.setText("Blood Pressure");

        lblRespRate2.setText("Respiration Rate");

        txtRespRate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRate2ActionPerformed(evt);
            }
        });

        lblPusleRate2.setText("Pulse Rate");

        txtPusleRate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPusleRate2ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel34.setText("Vital Signs");

        lblDate2.setText("Encounter Date");

        jLabel35.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel35.setText("Encounter History");

        tableEncHistory2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Temperature", "Blood Pressure", "Respiration Rate", "Pulse Rate", "Encounter Date", "Doctor", "Sick"
            }
        ));
        jScrollPane13.setViewportView(tableEncHistory2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel34)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRespRate2)
                                    .addComponent(lblDate2))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRespRate2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(dateChooserPatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(txtTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBp2)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblPusleRate2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPusleRate2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBp2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(392, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel34)
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemp2)
                    .addComponent(txtTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBp2)
                    .addComponent(txtBp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRespRate2)
                    .addComponent(txtRespRate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPusleRate2)
                    .addComponent(txtPusleRate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblDate2)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel35)
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateChooserPatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(556, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("View Encounters", jPanel5);

        pnlPatient.add(jTabbedPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 144, 1440, 1050));

        jPanel7.setBackground(new java.awt.Color(255, 204, 204));

        btnLogout2.setText("Logout");
        btnLogout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(1323, Short.MAX_VALUE)
                .addComponent(btnLogout2)
                .addGap(43, 43, 43))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btnLogout2)
                .addContainerGap())
        );

        pnlPatient.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1438, 50));

        getContentPane().add(pnlPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 4, 1440, 1190));

        pnlHospitalAdmin.setBackground(new java.awt.Color(255, 204, 153));
        pnlHospitalAdmin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel36.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Hospital Admin Panel");
        pnlHospitalAdmin.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 30, 1430, 30));

        jTabbedPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane4MouseClicked(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(255, 204, 102));

        lblName4.setText("Name");

        comboBoxgenderHA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        lblUsername3.setText("Username");

        lblEmail4.setText("Email");

        lblPhoneNo4.setText("Phone No");

        txtPassHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassHAActionPerformed(evt);
            }
        });

        lblAge4.setText("Age");

        lblGender4.setText("Gender");

        txtNameHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameHAActionPerformed(evt);
            }
        });

        lblPass3.setText("Password");

        btnCreateHA.setText("Update");
        btnCreateHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                            .addGap(114, 114, 114)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsernameHA, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                .addComponent(txtPassHA)))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(lblName4)
                                .addGap(78, 78, 78)
                                .addComponent(txtNameHA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(lblAge4)
                                .addGap(90, 90, 90)
                                .addComponent(txtAgeHA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblGender4)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(lblEmail4)
                                    .addGap(80, 80, 80)
                                    .addComponent(txtEmailHA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel11Layout.createSequentialGroup()
                                    .addComponent(lblPhoneNo4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPhoneNoHA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblUsername3)
                            .addComponent(lblPass3)
                            .addComponent(comboBoxgenderHA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(464, 464, 464)
                        .addComponent(btnCreateHA)))
                .addContainerGap(749, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName4)
                    .addComponent(txtNameHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgeHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge4))
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail4))
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhoneNoHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNo4))
                .addGap(34, 34, 34)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender4)
                    .addComponent(comboBoxgenderHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsernameHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername3))
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPass3))
                .addGap(116, 116, 116)
                .addComponent(btnCreateHA)
                .addContainerGap(481, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Manage Profile", jPanel11);

        pnlMenuBar1.setBackground(new java.awt.Color(255, 204, 102));

        btnCreatePatient1.setText("Create Patient");
        btnCreatePatient1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatient1ActionPerformed(evt);
            }
        });

        btnCreateDoc1.setText("Create Doctor");
        btnCreateDoc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDoc1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuBar1Layout = new javax.swing.GroupLayout(pnlMenuBar1);
        pnlMenuBar1.setLayout(pnlMenuBar1Layout);
        pnlMenuBar1Layout.setHorizontalGroup(
            pnlMenuBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuBar1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMenuBar1Layout.createSequentialGroup()
                        .addComponent(btnCreatePatient1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnCreateDoc1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMenuBar1Layout.setVerticalGroup(
            pnlMenuBar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuBar1Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(btnCreatePatient1)
                .addGap(18, 18, 18)
                .addComponent(btnCreateDoc1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        splitPaneSystemAdmin1.setLeftComponent(pnlMenuBar1);

        pnlWorkArea1.setBackground(new java.awt.Color(255, 204, 102));

        javax.swing.GroupLayout pnlWorkArea1Layout = new javax.swing.GroupLayout(pnlWorkArea1);
        pnlWorkArea1.setLayout(pnlWorkArea1Layout);
        pnlWorkArea1Layout.setHorizontalGroup(
            pnlWorkArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1232, Short.MAX_VALUE)
        );
        pnlWorkArea1Layout.setVerticalGroup(
            pnlWorkArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1007, Short.MAX_VALUE)
        );

        splitPaneSystemAdmin1.setRightComponent(pnlWorkArea1);

        javax.swing.GroupLayout tabCreatePerson1Layout = new javax.swing.GroupLayout(tabCreatePerson1);
        tabCreatePerson1.setLayout(tabCreatePerson1Layout);
        tabCreatePerson1Layout.setHorizontalGroup(
            tabCreatePerson1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreatePerson1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPaneSystemAdmin1)
                .addContainerGap())
        );
        tabCreatePerson1Layout.setVerticalGroup(
            tabCreatePerson1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreatePerson1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPaneSystemAdmin1)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Create Entities", tabCreatePerson1);

        tabManageHospitals1.setBackground(new java.awt.Color(255, 204, 102));

        jLabel59.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel59.setText("Create Hospital");

        jLabel60.setText("Hospital Name:");

        jLabel61.setText("Select City:");

        jLabel62.setText("Select Community:");

        comboBoxHospCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHospCity1ActionPerformed(evt);
            }
        });

        comboBoxHospComm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHospComm1ActionPerformed(evt);
            }
        });

        btnAddHosp1.setText("Add");
        btnAddHosp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHosp1ActionPerformed(evt);
            }
        });

        jLabel63.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel63.setText("View Hospitals");

        tableHospitals1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "Community", "City"
            }
        ));
        jScrollPane24.setViewportView(tableHospitals1);

        jLabel64.setText("Hospital Name:");

        btnUpdateHosp1.setText("Update");
        btnUpdateHosp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHosp1ActionPerformed(evt);
            }
        });

        btnDeleteHosp1.setText("Delete");
        btnDeleteHosp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHosp1ActionPerformed(evt);
            }
        });

        btnViewHosp1.setText("View");
        btnViewHosp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHosp1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManageHospitals1Layout = new javax.swing.GroupLayout(tabManageHospitals1);
        tabManageHospitals1.setLayout(tabManageHospitals1Layout);
        tabManageHospitals1Layout.setHorizontalGroup(
            tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageHospitals1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageHospitals1Layout.createSequentialGroup()
                        .addComponent(jLabel64)
                        .addGap(18, 18, 18)
                        .addComponent(txtHospView1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewHosp1)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateHosp1)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteHosp1))
                    .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63)
                    .addComponent(jLabel59)
                    .addGroup(tabManageHospitals1Layout.createSequentialGroup()
                        .addGroup(tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel61)
                            .addComponent(jLabel60)
                            .addComponent(jLabel62))
                        .addGap(27, 27, 27)
                        .addGroup(tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comboBoxHospComm1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHospitalName1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxHospCity1, 0, 196, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAddHosp1)))
                .addContainerGap(725, Short.MAX_VALUE))
        );
        tabManageHospitals1Layout.setVerticalGroup(
            tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageHospitals1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel59)
                .addGap(18, 18, 18)
                .addGroup(tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHospitalName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddHosp1)
                    .addComponent(jLabel60))
                .addGap(18, 18, 18)
                .addGroup(tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(comboBoxHospCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(comboBoxHospComm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(jLabel63)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(tabManageHospitals1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(txtHospView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateHosp1)
                    .addComponent(btnDeleteHosp1)
                    .addComponent(btnViewHosp1))
                .addContainerGap(506, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Manage Hospitals", tabManageHospitals1);

        tablePatients1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Email", "Phone No", "Gender", "City", "Community"
            }
        ));
        scrollPanePatient2.setViewportView(tablePatients1);

        jPanel15.setBackground(new java.awt.Color(255, 204, 102));

        comboBoxgender1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        txtName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName1ActionPerformed(evt);
            }
        });

        lblAge5.setText("Age");

        lblGender5.setText("Gender");

        lblPhoneNo5.setText("Phone No");

        lblEmail5.setText("Email");

        lblUsernamePat1.setText("Username");

        lblPatientId1.setText("Patient ID");

        lblName5.setText("Name");

        lblCity1.setText("City");

        comboBoxCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCity1ActionPerformed(evt);
            }
        });

        lblCommunity1.setText("Community");

        lblHouse1.setText("House");

        jLabel42.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel42.setText("Vital Signs History");

        lblTemp4.setText("Temperature");

        lblBp4.setText("Blood Pressure");

        lblRespRate4.setText("Respiration Rate");

        txtRespRate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRespRate4ActionPerformed(evt);
            }
        });

        lblPusleRate4.setText("Pulse Rate");

        txtPusleRate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPusleRate4ActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel43.setText("Vital Signs");

        lblDate4.setText("Encounter Date");

        tableEncHistory4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Temperature", "Blood Pressure", "Respiration Rate", "Pulse Rate", "Encounter Date"
            }
        ));
        jScrollPane19.setViewportView(tableEncHistory4);

        btnSave1.setText("Edit Changes");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lblName5)
                                        .addGap(78, 78, 78)
                                        .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lblAge5)
                                        .addGap(90, 90, 90)
                                        .addComponent(txtAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEmail5)
                                            .addComponent(lblPhoneNo5))
                                        .addGap(56, 56, 56)
                                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPhoneNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lblGender5)
                                        .addGap(69, 69, 69)
                                        .addComponent(comboBoxgender1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(97, 97, 97)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblPatientId1)
                                    .addComponent(txtPatientId1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lblCommunity1)
                                        .addGap(45, 45, 45)
                                        .addComponent(comboBoxComm1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCity1)
                                            .addComponent(lblHouse1))
                                        .addGap(74, 74, 74)
                                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(comboBoxHouse1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboBoxCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lblUsernamePat1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtUsernamePat1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel43)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblRespRate4)
                                            .addComponent(lblDate4))
                                        .addGap(45, 45, 45)
                                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DateChooserEncDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRespRate4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lblTemp4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(txtTemp4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBp4)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lblPusleRate4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPusleRate4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBp4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(697, 697, 697)
                        .addComponent(btnSave1)))
                .addContainerGap(368, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblName5)
                                    .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAge1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAge5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmail5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPhoneNo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPhoneNo5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblGender5)
                                    .addComponent(comboBoxgender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addComponent(jLabel43)
                                .addGap(31, 31, 31)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTemp4)
                                    .addComponent(txtTemp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBp4)
                                    .addComponent(txtBp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCity1)
                                    .addComponent(comboBoxCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCommunity1)
                                    .addComponent(comboBoxComm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHouse1)
                                    .addComponent(comboBoxHouse1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPatientId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPatientId1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUsernamePat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsernamePat1))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRespRate4)
                            .addComponent(txtRespRate4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPusleRate4)
                            .addComponent(txtPusleRate4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateChooserEncDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDate4))))
                .addGap(1, 1, 1)
                .addComponent(btnSave1)
                .addContainerGap(708, Short.MAX_VALUE))
        );

        jScrollPane18.setViewportView(jPanel15);

        btnView1.setText("View");
        btnView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView1ActionPerformed(evt);
            }
        });

        btnDelete1.setText("Delete");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManagePatient1Layout = new javax.swing.GroupLayout(tabManagePatient1);
        tabManagePatient1.setLayout(tabManagePatient1Layout);
        tabManagePatient1Layout.setHorizontalGroup(
            tabManagePatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManagePatient1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabManagePatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManagePatient1Layout.createSequentialGroup()
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(tabManagePatient1Layout.createSequentialGroup()
                        .addComponent(scrollPanePatient2, javax.swing.GroupLayout.PREFERRED_SIZE, 1245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(tabManagePatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnView1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(51, Short.MAX_VALUE))))
        );
        tabManagePatient1Layout.setVerticalGroup(
            tabManagePatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManagePatient1Layout.createSequentialGroup()
                .addGroup(tabManagePatient1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManagePatient1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnView1)
                        .addGap(27, 27, 27)
                        .addComponent(btnDelete1))
                    .addGroup(tabManagePatient1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(scrollPanePatient2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 1136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Manage Patient Data", tabManagePatient1);

        tabManageDoc1.setBackground(new java.awt.Color(255, 204, 102));

        tableDoc1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Email", "Phone No", "Gender", "Doctor ID", "Hospital"
            }
        ));
        scrollPanePatient3.setViewportView(tableDoc1);

        jPanel16.setBackground(new java.awt.Color(255, 204, 102));

        comboBoxGenderDoc1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        txtNameDoc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameDoc1ActionPerformed(evt);
            }
        });

        lblAge6.setText("Age");

        lblGender6.setText("Gender");

        lblPhoneNo6.setText("Phone No");

        lblEmail6.setText("Email");

        lblUsernameDoc1.setText("Username");

        lblDocId4.setText("Doctor ID");

        lblName6.setText("Name");

        lblHosp2.setText("Hospital");

        comboBoxHosp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHosp1ActionPerformed(evt);
            }
        });

        btnSaveEdits1.setText("Edit Changes");
        btnSaveEdits1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEdits1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(lblName6)
                                .addGap(78, 78, 78)
                                .addComponent(txtNameDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(lblAge6)
                                .addGap(90, 90, 90)
                                .addComponent(txtAgeDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmail6)
                                    .addComponent(lblPhoneNo6))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhoneNoDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmailDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(lblGender6)
                                .addGap(69, 69, 69)
                                .addComponent(comboBoxGenderDoc1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(97, 97, 97)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDocId4)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(lblUsernameDoc1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(txtUsernameDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                                .addComponent(lblHosp2)
                                .addGap(77, 77, 77)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboBoxHosp1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDocId1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(625, 625, 625)
                        .addComponent(btnSaveEdits1)))
                .addContainerGap(895, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName6)
                            .addComponent(txtNameDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAgeDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmailDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhoneNoDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoneNo6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender6)
                            .addComponent(comboBoxGenderDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHosp2)
                            .addComponent(comboBoxHosp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDocId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDocId4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsernameDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsernameDoc1))))
                .addGap(120, 120, 120)
                .addComponent(btnSaveEdits1)
                .addContainerGap(809, Short.MAX_VALUE))
        );

        jScrollPane20.setViewportView(jPanel16);

        btnViewDoc1.setText("View");
        btnViewDoc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDoc1ActionPerformed(evt);
            }
        });

        btnDeleteDoc1.setText("Delete");
        btnDeleteDoc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDoc1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManageDoc1Layout = new javax.swing.GroupLayout(tabManageDoc1);
        tabManageDoc1.setLayout(tabManageDoc1Layout);
        tabManageDoc1Layout.setHorizontalGroup(
            tabManageDoc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageDoc1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabManageDoc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageDoc1Layout.createSequentialGroup()
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(tabManageDoc1Layout.createSequentialGroup()
                        .addComponent(scrollPanePatient3, javax.swing.GroupLayout.PREFERRED_SIZE, 1245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(tabManageDoc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnViewDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(51, Short.MAX_VALUE))))
        );
        tabManageDoc1Layout.setVerticalGroup(
            tabManageDoc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageDoc1Layout.createSequentialGroup()
                .addGroup(tabManageDoc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageDoc1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnViewDoc1)
                        .addGap(27, 27, 27)
                        .addComponent(btnDeleteDoc1))
                    .addGroup(tabManageDoc1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(scrollPanePatient3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 1136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Manage Doctor Data", tabManageDoc1);

        pnlHospitalAdmin.add(jTabbedPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 144, 1440, 1050));

        jPanel14.setBackground(new java.awt.Color(255, 204, 102));

        btnLogout3.setText("Logout");
        btnLogout3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(1323, Short.MAX_VALUE)
                .addComponent(btnLogout3)
                .addGap(43, 43, 43))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btnLogout3)
                .addContainerGap())
        );

        pnlHospitalAdmin.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1438, 50));

        getContentPane().add(pnlHospitalAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 4, 1440, 1190));

        pnlCommunityAdmin.setBackground(new java.awt.Color(255, 204, 102));
        pnlCommunityAdmin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel37.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Community Admin Panel");
        pnlCommunityAdmin.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 30, 1430, 30));

        jTabbedPane5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane5MouseClicked(evt);
            }
        });

        jPanel12.setBackground(new java.awt.Color(255, 204, 102));

        lblName7.setText("Name");

        comboBoxgenderCA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Other" }));

        lblUsername4.setText("Username");

        lblEmail7.setText("Email");

        lblPhoneNo7.setText("Phone No");

        txtPassCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassCAActionPerformed(evt);
            }
        });

        lblAge7.setText("Age");

        lblGender7.setText("Gender");

        txtNameCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameCAActionPerformed(evt);
            }
        });

        lblPass4.setText("Password");

        btnCreateHA1.setText("Update");
        btnCreateHA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateHA1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                            .addGap(114, 114, 114)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsernameCA, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                .addComponent(txtPassCA)))
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(lblName7)
                                .addGap(78, 78, 78)
                                .addComponent(txtNameCA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(lblAge7)
                                .addGap(90, 90, 90)
                                .addComponent(txtAgeCA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblGender7)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addComponent(lblEmail7)
                                    .addGap(80, 80, 80)
                                    .addComponent(txtEmailCA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addComponent(lblPhoneNo7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPhoneNoCA, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblUsername4)
                            .addComponent(lblPass4)
                            .addComponent(comboBoxgenderCA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(464, 464, 464)
                        .addComponent(btnCreateHA1)))
                .addContainerGap(749, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName7)
                    .addComponent(txtNameCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgeCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge7))
                .addGap(29, 29, 29)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail7))
                .addGap(30, 30, 30)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhoneNoCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNo7))
                .addGap(34, 34, 34)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender7)
                    .addComponent(comboBoxgenderCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsernameCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername4))
                .addGap(30, 30, 30)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPass4))
                .addGap(116, 116, 116)
                .addComponent(btnCreateHA1)
                .addContainerGap(481, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Manage Profile", jPanel12);

        tabCreateResources1.setBackground(new java.awt.Color(255, 204, 102));

        jLabel38.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel38.setText("Create City");

        btnAddCity1.setText("Add");
        btnAddCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCity1ActionPerformed(evt);
            }
        });

        btnAddCom1.setText("Add");
        btnAddCom1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCom1ActionPerformed(evt);
            }
        });

        jLabel39.setText("City Name:");

        jLabel40.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel40.setText("Create Community");

        jLabel41.setText("Community Name:");

        jLabel46.setText("Select City:");

        comboBoxSelectCity1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxSelectCity1MouseClicked(evt);
            }
        });
        comboBoxSelectCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSelectCity1ActionPerformed(evt);
            }
        });

        comboBoxSelectCity3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxSelectCity3MouseClicked(evt);
            }
        });
        comboBoxSelectCity3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSelectCity3ActionPerformed(evt);
            }
        });

        jLabel47.setText("Select City:");

        jLabel48.setText("House Name:");

        jLabel49.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel49.setText("Create House");

        btnAddHouse1.setText("Add");
        btnAddHouse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHouse1ActionPerformed(evt);
            }
        });

        jLabel50.setText("Select Community:");

        comboBoxSelectComm1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxSelectComm1MouseClicked(evt);
            }
        });
        comboBoxSelectComm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSelectComm1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabCreateResources1Layout = new javax.swing.GroupLayout(tabCreateResources1);
        tabCreateResources1.setLayout(tabCreateResources1Layout);
        tabCreateResources1Layout.setHorizontalGroup(
            tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreateResources1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40)
                    .addComponent(jLabel38)
                    .addComponent(jLabel49)
                    .addGroup(tabCreateResources1Layout.createSequentialGroup()
                        .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(tabCreateResources1Layout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabCreateResources1Layout.createSequentialGroup()
                                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabCreateResources1Layout.createSequentialGroup()
                                        .addComponent(jLabel41)
                                        .addGap(18, 18, 18))
                                    .addGroup(tabCreateResources1Layout.createSequentialGroup()
                                        .addComponent(jLabel46)
                                        .addGap(59, 59, 59)))
                                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtComm1)
                                    .addComponent(comboBoxSelectCity1, 0, 196, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddCity1)
                            .addComponent(btnAddCom1)))
                    .addGroup(tabCreateResources1Layout.createSequentialGroup()
                        .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabCreateResources1Layout.createSequentialGroup()
                                .addComponent(jLabel50)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxSelectComm1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabCreateResources1Layout.createSequentialGroup()
                                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47)
                                    .addComponent(jLabel48))
                                .addGap(47, 47, 47)
                                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHouse1)
                                    .addComponent(comboBoxSelectCity3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(btnAddHouse1)))
                .addContainerGap(946, Short.MAX_VALUE))
        );
        tabCreateResources1Layout.setVerticalGroup(
            tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCreateResources1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCity1)
                    .addComponent(jLabel39))
                .addGap(77, 77, 77)
                .addComponent(jLabel40)
                .addGap(18, 18, 18)
                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtComm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCom1)
                    .addComponent(jLabel41))
                .addGap(18, 18, 18)
                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(comboBoxSelectCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(jLabel49)
                .addGap(18, 18, 18)
                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHouse1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddHouse1)
                    .addComponent(jLabel48))
                .addGap(18, 18, 18)
                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(comboBoxSelectCity3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabCreateResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(comboBoxSelectComm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(489, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Create Resources", tabCreateResources1);

        tabManageResources1.setBackground(new java.awt.Color(255, 204, 102));

        tableCities1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "City Name"
            }
        ));
        jScrollPane14.setViewportView(tableCities1);

        jLabel51.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel51.setText("Cities");

        jLabel52.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel52.setText("Communities");

        tableHouses1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "House Name", "Community", "City"
            }
        ));
        jScrollPane15.setViewportView(tableHouses1);

        jLabel53.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel53.setText("Houses");

        tableComm1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Community Name", "City"
            }
        ));
        jScrollPane16.setViewportView(tableComm1);

        btnViewCity1.setText("View");
        btnViewCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCity1ActionPerformed(evt);
            }
        });

        jLabel54.setText("City Name:");

        btnUpdateCity1.setText("Update");
        btnUpdateCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCity1ActionPerformed(evt);
            }
        });

        btnViewComm1.setText("View");
        btnViewComm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewComm1ActionPerformed(evt);
            }
        });

        jLabel55.setText("Community Name:");

        btnUpdateComm1.setText("Update");
        btnUpdateComm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateComm1ActionPerformed(evt);
            }
        });

        btnViewHouse1.setText("View");
        btnViewHouse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHouse1ActionPerformed(evt);
            }
        });

        jLabel56.setText("House Name:");

        btnUpdateHouse1.setText("Update");
        btnUpdateHouse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHouse1ActionPerformed(evt);
            }
        });

        btnDeleteCity1.setText("Delete");
        btnDeleteCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCity1ActionPerformed(evt);
            }
        });

        btnDeleteComm1.setText("Delete");
        btnDeleteComm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteComm1ActionPerformed(evt);
            }
        });

        btnDeleteHouse1.setText("Delete");
        btnDeleteHouse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHouse1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabManageResources1Layout = new javax.swing.GroupLayout(tabManageResources1);
        tabManageResources1.setLayout(tabManageResources1Layout);
        tabManageResources1Layout.setHorizontalGroup(
            tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageResources1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel53)
                    .addComponent(jLabel52)
                    .addComponent(jLabel51)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                    .addComponent(jScrollPane16)
                    .addComponent(jScrollPane15))
                .addGap(86, 86, 86)
                .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewCity1)
                    .addComponent(btnViewHouse1)
                    .addComponent(btnViewComm1)
                    .addGroup(tabManageResources1Layout.createSequentialGroup()
                        .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tabManageResources1Layout.createSequentialGroup()
                                .addComponent(jLabel56)
                                .addGap(18, 18, 18)
                                .addComponent(txtHouseView1))
                            .addGroup(tabManageResources1Layout.createSequentialGroup()
                                .addComponent(jLabel54)
                                .addGap(18, 18, 18)
                                .addComponent(txtCityView1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabManageResources1Layout.createSequentialGroup()
                                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCommView1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabManageResources1Layout.createSequentialGroup()
                                .addComponent(btnUpdateHouse1)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteHouse1))
                            .addGroup(tabManageResources1Layout.createSequentialGroup()
                                .addComponent(btnUpdateComm1)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteComm1))
                            .addGroup(tabManageResources1Layout.createSequentialGroup()
                                .addComponent(btnUpdateCity1)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteCity1)))))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        tabManageResources1Layout.setVerticalGroup(
            tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabManageResources1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel51)
                .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageResources1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabManageResources1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnViewCity1)
                        .addGap(18, 18, 18)
                        .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel54)
                            .addComponent(txtCityView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateCity1)
                            .addComponent(btnDeleteCity1))))
                .addGap(39, 39, 39)
                .addComponent(jLabel52)
                .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageResources1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabManageResources1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnViewComm1)
                        .addGap(18, 18, 18)
                        .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel55)
                            .addComponent(txtCommView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateComm1)
                            .addComponent(btnDeleteComm1))))
                .addGap(37, 37, 37)
                .addComponent(jLabel53)
                .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabManageResources1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabManageResources1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnViewHouse1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabManageResources1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel56)
                            .addComponent(txtHouseView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateHouse1)
                            .addComponent(btnDeleteHouse1))))
                .addContainerGap(438, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Manage Resources", tabManageResources1);

        pnlCommunityAdmin.add(jTabbedPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 144, 1440, 1050));

        jPanel19.setForeground(new java.awt.Color(255, 204, 102));

        btnLogout4.setText("Logout");
        btnLogout4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(1323, Short.MAX_VALUE)
                .addComponent(btnLogout4)
                .addGap(43, 43, 43))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btnLogout4)
                .addContainerGap())
        );

        pnlCommunityAdmin.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1438, 50));

        getContentPane().add(pnlCommunityAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 4, 1440, 1190));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void comboBoxLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxLoginActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:

        try {

            String uname = txtUsername.getText();
            String pass = txtPass.getText();
            String loginType = comboBoxLogin.getSelectedItem().toString();

            //System.out.println("----Login btn----");
            Boolean loggedIn = false;
            //System.out.println("Size = "+ patientDir.getPatientList().size());
            if (patientDir.getPatientList().size() < 0) {
                System.out.println("----Name = " + patientDir.getPatientList().get(0).getName());

            }

            if ("Patient".equals(loginType)) {

                for (Patient p : patientDir.getPatientList()) {

                    if (uname.equals(p.getUsername()) && pass.equals(p.getPassword())) {

                        loggedIn = true;
                        JOptionPane.showMessageDialog(this, "Successfully Logged in as Patient: " + p.getName());
                        //System.out.println("---- Logged in as Patient: " + p.getName());

                        pnlHome.setVisible(false);
                        pnlPatient.setVisible(true);
                        pnlDoctor.setVisible(false);
                        pnlSysAdmin.setVisible(false);
                        pnlCommunityAdmin.setVisible(false);
                        pnlHospitalAdmin.setVisible(false);

                        this.loginPatient = p;
                        fillPatientProfile(p);
                        populateTablesForPatient();
                        fillEncounterDetails(p);

                    }

                }
                if (loggedIn == false) {
                    JOptionPane.showMessageDialog(this, "Please enter valid credentials for " + loginType);
                }
            }

            if ("Doctor".equals(loginType)) {
                for (Doctor doc : docDir.getDocList()) {

                    if (uname.equals(doc.getUsername()) && pass.equals(doc.getPassword())) {

                        loggedIn = true;
                        JOptionPane.showMessageDialog(this, "Successfully Logged in as Doctor: " + doc.getName());
                        //System.out.println("---- Logged in as Doctor: " + doc.getName());

                        pnlHome.setVisible(false);
                        pnlPatient.setVisible(false);
                        pnlSysAdmin.setVisible(false);
                        pnlDoctor.setVisible(true);
                        pnlCommunityAdmin.setVisible(false);
                        pnlHospitalAdmin.setVisible(false);

                        this.loginDoc = doc;
                        fillDoctorProfile(doc);
                        populatePatients();
                    }
                }
                if (loggedIn == false) {
                    JOptionPane.showMessageDialog(this, "Please enter valid credentials for " + loginType);
                }

            }

            if ("System Admin".equals(loginType)) {
                for (SystemAdmin sys : sysDir.getSysAdminList()) {

                    if (uname.equals(sys.getUsername()) && pass.equals(sys.getPassword())) {

                        loggedIn = true;
                        //JOptionPane.showMessageDialog(this, "Successfully Logged in as System Admin: " + sys.getName());
                        //System.out.println("---- Logged in as Doctor: " + sys.getName());

                        pnlHome.setVisible(false);
                        pnlPatient.setVisible(false);
                        pnlDoctor.setVisible(false);
                        pnlSysAdmin.setVisible(true);
                        pnlCommunityAdmin.setVisible(false);
                        pnlHospitalAdmin.setVisible(false);

                    }
                }
                if (loggedIn == false) {
                    JOptionPane.showMessageDialog(this, "Please enter valid credentials for " + loginType);
                }

            }

            if ("Community Admin".equals(loginType)) {
                for (CommunityAdmin comm : commAdminDir.getCommAdminList()) {

                    if (uname.equals(comm.getUsername()) && pass.equals(comm.getPassword())) {

                        loggedIn = true;
                        JOptionPane.showMessageDialog(this, "Successfully Logged in as Doctor: " + comm.getName());
                        //System.out.println("---- Logged in as Doctor: " + comm.getName());

                        this.loginCommAdmin = comm;
                        pnlHome.setVisible(false);
                        pnlPatient.setVisible(false);
                        pnlDoctor.setVisible(false);
                        pnlSysAdmin.setVisible(false);
                        pnlCommunityAdmin.setVisible(true);
                        pnlHospitalAdmin.setVisible(false);

                        fillCommAdminProfile(comm);

                    }
                }
                if (loggedIn == false) {
                    JOptionPane.showMessageDialog(this, "Please enter valid credentials for " + loginType);
                }

            }

            if ("Hospital Admin".equals(loginType)) {
                for (HospitalAdmin hos : hosAdminDir.getHospAdminList()) {

                    if (uname.equals(hos.getUsername()) && pass.equals(hos.getPassword())) {

                        loggedIn = true;
                        JOptionPane.showMessageDialog(this, "Successfully Logged in as Hospital Admin: " + hos.getName());
                        //System.out.println("---- Logged in as Hospital Admin: " + hos.getName());

                        this.loginHosAdmin = hos;
                        pnlHome.setVisible(false);
                        pnlPatient.setVisible(false);
                        pnlDoctor.setVisible(false);
                        pnlSysAdmin.setVisible(false);
                        pnlCommunityAdmin.setVisible(false);
                        pnlHospitalAdmin.setVisible(true);

                        fillHospAdminProfile(hos);
                        populateTableHospitalsHospAdmin();

                    }
                }
                if (loggedIn == false) {
                    JOptionPane.showMessageDialog(this, "Please enter valid credentials for " + loginType);
                }

            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        logout();
//        pnlHome.setVisible(true);
//        pnlPatient.setVisible(false);
//        pnlDoctor.setVisible(false);
//        pnlSysAdmin.setVisible(false);
//        pnlCommunityAdmin.setVisible(false);
//        pnlHospitalAdmin.setVisible(false);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        populateTablePatient();
        populateTableDoctor();
        populateResourcesTable();
        populateTableHospitals();

        //populate checkbox on Create Resources panel 
        //1
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxSelectCity.setModel(cityComboBox);

        //2
        DefaultComboBoxModel cityComboBox2 = new DefaultComboBoxModel();
        cityComboBox2.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox2.addElement(c.getCityName());
        }

        comboBoxSelectCity2.setModel(cityComboBox2);

        //populate checkbox on Create Hospital panel 
        //1
        DefaultComboBoxModel cityComboBox3 = new DefaultComboBoxModel();
        cityComboBox3.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox3.addElement(c.getCityName());
        }
        comboBoxHospCity.setModel(cityComboBox3);

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void comboBoxSelectCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSelectCommActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_comboBoxSelectCommActionPerformed

    private void comboBoxHospCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHospCommActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxHospCommActionPerformed

    private void btnDeleteDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDocActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tableDoc.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Doctor");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableDoc.getModel();
        Doctor selectedDoc = (Doctor) model.getValueAt(selectedRowIndex, 0);

        docDir.deleteDoctor(selectedDoc);

        JOptionPane.showMessageDialog(this, "Selected Doctor record deleted");

        model.setRowCount(0);

        populateTableDoctor();    // perform search again within updated employee list

        //to set view profile fields blank when a record is deleted
        txtNameDoc.setText("");
        txtDocId.setText("");
        txtAgeDoc.setText("");
        txtUsernameDoc.setText("");
        txtEmailDoc.setText("");
        txtPhoneNoDoc.setText("");
        comboBoxgender.setSelectedIndex(0);
        if (comboBoxHosp.getSelectedItem() != null) {
            comboBoxHosp.setSelectedIndex(0);
        }

    }//GEN-LAST:event_btnDeleteDocActionPerformed

    private void btnViewDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDocActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableDoc.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Doctor");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableDoc.getModel();
        Doctor selectedDoc = (Doctor) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtNameDoc.setText(selectedDoc.getName());
        txtAgeDoc.setText(String.valueOf(selectedDoc.getAge()));
        txtEmailDoc.setText(selectedDoc.getEmail());
        txtPhoneNoDoc.setText(String.valueOf(selectedDoc.getPhoneNo()));
        txtEmailDoc.setText(selectedDoc.getEmail());
        txtDocId.setText(String.valueOf(selectedDoc.getDocId()));
        txtUsernameDoc.setText(selectedDoc.getUsername());

        // add hospitals in combobox
        DefaultComboBoxModel hospComboBox = new DefaultComboBoxModel();
        hospComboBox.addElement("Select");

        for (Hospital c : hospDir.getHospitalDirectory()) {
            hospComboBox.addElement(c.getHospitalName());
        }
        comboBoxHosp.setModel(hospComboBox);

        // Select Hospital
        //Set Gender
        String currentGender = selectedDoc.getGender();
        for (int i = 0; i < comboBoxGenderDoc.getItemCount(); i++) {
            String item = comboBoxGenderDoc.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxGenderDoc.setSelectedIndex(i);
                break;
            }
        }

        //Set Hospital
        String hosp = selectedDoc.getHospital().getHospitalName();
        for (int i = 0; i < comboBoxHosp.getItemCount(); i++) {
            String item = comboBoxHosp.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(hosp)) {
                comboBoxHosp.setSelectedIndex(i);
                break;
            }
        }

    }//GEN-LAST:event_btnViewDocActionPerformed

    private void btnSaveEditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEditsActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tableDoc.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Doctor");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableDoc.getModel();
        Doctor selectedDoc = (Doctor) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtNameDoc.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAgeDoc.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }
        //Email
        String email = txtEmailDoc.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }

        //Phone Number
        String phoneNo = txtPhoneNoDoc.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        //Gender
        String gender = comboBoxGenderDoc.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }

        // Not Mandatory Attributes
        String hosp = comboBoxHosp.getSelectedItem().toString();
        if ("Select".equals(hosp)) {
            JOptionPane.showMessageDialog(this, "Please select Hospital");
            return;
        }

        //Doc ID
        String docId = txtDocId.getText();
        if (docId.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Doctor ID");
            return;
        }
        if (docId.length() > 0 && !docId.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Doctor ID can contain only Numeric values");
            return;
        }
        if (docId.length() > 9) {
            JOptionPane.showMessageDialog(this, "Docotor ID should be less than 10 digits");
            return;
        }

        //Username
        String userName = txtUsernameDoc.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        //Populate input data into Arraylist
        Hospital hospObj = hospDir.findHospitalFromName(hosp);

        selectedDoc.setName(name);
        selectedDoc.setAge(Short.parseShort(age));
        selectedDoc.setEmail(email);
        selectedDoc.setPhoneNo(Long.parseLong(phoneNo));
        selectedDoc.setGender(gender);
        selectedDoc.setHospital(hospObj);
        selectedDoc.setDocId(Integer.parseInt(docId));
        selectedDoc.setUsername(userName);

        //patientDir.addNewPatient(name, Short.parseShort(age), email, gender, Long.parseLong(phoneNo), houseObj, cityObj, commObj, Integer.parseInt(patientId) , userName, pass);
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateTableDoctor();
        JOptionPane.showMessageDialog(this, "Doctor record updated");

    }//GEN-LAST:event_btnSaveEditsActionPerformed

    private void comboBoxHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHospActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxHospActionPerformed

    private void txtNameDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameDocActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tablePatients.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Patient");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tablePatients.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        patientDir.deletePatient(selectedPatient);

        JOptionPane.showMessageDialog(this, "Selected Patient record deleted");

        model.setRowCount(0);

        populateTablePatient();    // perform search again within updated employee list

        //to set view profile fields blank when a record is deleted
        txtName.setText("");
        txtPatientId.setText("");
        txtAge.setText("");
        txtUsernamePat.setText("");
        txtPass.setText("");
        txtEmail.setText("");
        txtPhoneNo.setText("");
        comboBoxgender.setSelectedIndex(0);

        if (comboBoxCity.getSelectedItem() != null) {
            comboBoxCity.setSelectedIndex(0);
            comboBoxComm.setSelectedIndex(0);
            comboBoxHouse.setSelectedIndex(0);
        }

        //Reset enc hist table and fields
        EncounterHistory selectedPatientHis = selectedPatient.getEncounterHist();
        DefaultTableModel encTableModel1 = (DefaultTableModel) tableEncHistory.getModel();
        encTableModel1.setRowCount(0);

        txtTemp3.setText("");
        txtRespRate3.setText("");
        txtBp3.setText("");
        txtPusleRate3.setText("");
        DateChooserEncDate3.setDate(null);

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tablePatients.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Patient");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tablePatients.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        this.selectedPatientEncHist = selectedPatient.getEncounterHist();
        //Set Data in View Panel

        txtName.setText(selectedPatient.getName());
        txtAge.setText(String.valueOf(selectedPatient.getAge()));
        txtEmail.setText(selectedPatient.getEmail());
        txtPhoneNo.setText(String.valueOf(selectedPatient.getPhoneNo()));
        txtEmail.setText(selectedPatient.getEmail());
        txtPatientId.setText(String.valueOf(selectedPatient.getPatientId()));
        txtUsernamePat.setText(selectedPatient.getUsername());

        //int index = p.getEncounterHist().getEncounterHist().size();
        //row[6] = p.getEncounterHist().getEncounterHist().get(index).getIsSick();
        int encListSize = selectedPatient.getEncounterHist().getEncounterHist().size();
        if (encListSize > 0) {
            VitalSigns vs = selectedPatient.getEncounterHist().getEncounterHist().get(encListSize - 1).getVitalSign();
            txtTemp.setText(String.valueOf(vs.getTemperature()));
            txtBp.setText(String.valueOf(vs.getBloodPressure()));
            txtRespRate.setText(String.valueOf(vs.getRespirationRate()));
            txtPusleRate.setText(String.valueOf(vs.getPulseRate()));
            DateChooserEncDate.setDate(selectedPatient.getEncounterHist().getEncounterHist().get(encListSize - 1).getEncounterDate());
        } else {

            txtTemp.setText("No record");
            txtBp.setText("No record");
            txtRespRate.setText("No record");
            txtPusleRate.setText("No record");
        }

        //Set Date
        //        Date dateRaw = selectedEmp.getJoiningDate();
        //        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        //        String joiningDateStr = sfd.format(dateRaw) ;
        //        txtDate.setText(joiningDateStr);
        // populate comboBox values
        // city
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxCity.setModel(cityComboBox);
        // community
        DefaultComboBoxModel commComboBox = new DefaultComboBoxModel();
        commComboBox.addElement("Select");

        for (Community c : commDir.getCommunityDirectory()) {
            commComboBox.addElement(c.getCommName());
        }

        comboBoxComm.setModel(commComboBox);

        // house
        DefaultComboBoxModel houseComboBox = new DefaultComboBoxModel();
        houseComboBox.addElement("Select");

        for (House h : houseDir.getHouseDirectory()) {
            houseComboBox.addElement(h.getHouseName());
        }

        comboBoxHouse.setModel(houseComboBox);

        //Set Gender
        String currentGender = selectedPatient.getGender();
        for (int i = 0; i < comboBoxgender.getItemCount(); i++) {
            String item = comboBoxgender.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxgender.setSelectedIndex(i);
                break;
            }
        }

        //Set City
        String city = selectedPatient.getHouse().getCommunity().getCity().getCityName();
        for (int i = 0; i < comboBoxCity.getItemCount(); i++) {
            String item = comboBoxCity.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(city)) {
                comboBoxCity.setSelectedIndex(i);
                break;
            }
        }

        //Set Community
        String comm = selectedPatient.getHouse().getCommunity().getCommName();
        for (int i = 0; i < comboBoxComm.getItemCount(); i++) {
            String item = comboBoxComm.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(comm)) {
                comboBoxComm.setSelectedIndex(i);
                break;
            }
        }

        //Set House
        String house = selectedPatient.getHouse().getHouseName();
        for (int i = 0; i < comboBoxHouse.getItemCount(); i++) {
            String item = comboBoxHouse.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(house)) {
                comboBoxHouse.setSelectedIndex(i);
                break;
            }
        }

        // populate encounter history table
        DefaultTableModel encTableModel = (DefaultTableModel) tableEncHistory.getModel();
        encTableModel.setRowCount(0);

        for (Encounter en : selectedPatient.getEncounterHist().getEncounterHist()) {

            try {
                Object[] row = new Object[5];
                row[0] = en;
                row[1] = en.getVitalSign().getBloodPressure();
                row[2] = en.getVitalSign().getRespirationRate();
                row[3] = en.getVitalSign().getPulseRate();
                row[4] = en.getEncounterDate();

                encTableModel.addRow(row);
            } catch (Exception e) {

            }
        }

        txtTemp3.setText("");
        txtRespRate3.setText("");
        txtBp3.setText("");
        txtPusleRate3.setText("");
        DateChooserEncDate3.setDate(null);

//        txtTemp.setText("");
//        txtBp.setText("");
//        txtRespRate.setText("");
//        txtPusleRate.setText("");
//        DateChooserEncDate.setDate(null);

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tablePatients.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Patient");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tablePatients.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtName.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAge.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }
        //Email
        String email = txtEmail.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }
        //Phone Number
        String phoneNo = txtPhoneNo.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        //Gender
        String gender = comboBoxgender.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }

        String city = comboBoxCity.getSelectedItem().toString();
        if ("Select".equals(city)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }
        String comm = comboBoxComm.getSelectedItem().toString();
        if ("Select".equals(comm)) {
            JOptionPane.showMessageDialog(this, "Please select Community");
            return;
        }
        String house = comboBoxHouse.getSelectedItem().toString();
        if ("Select".equals(house)) {
            JOptionPane.showMessageDialog(this, "Please select House");
            return;
        }

        //Patient ID
        String patientId = txtPatientId.getText();
        if (patientId.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Patient ID");
            return;
        }
        if (patientId.length() > 0 && !patientId.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Patient ID can contain only Numeric values");
            return;
        }
        if (patientId.length() > 9) {
            JOptionPane.showMessageDialog(this, "Patient ID should be less than 10 digits");
            return;
        }
        //Username
        String userName = txtUsernamePat.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        // Update latest vital signs
        String temp = txtTemp.getText();
        if (temp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Temperature");
            return;
        }
        if (temp.length() > 0 && !temp.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Temperature can contain only Numeric values");
            return;
        }

        String rr = txtRespRate.getText();
        if (rr.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Respiration Rate");
            return;
        }
        if (rr.length() > 0 && !rr.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Respiration Rate can contain only Numeric values");
            return;
        }

        String bp = txtBp.getText();
        if (bp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Blood Pressure");
            return;
        }
        if (bp.length() > 0 && !bp.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Blood Pressure can contain only Numeric values");
            return;
        }

        String pr = txtPusleRate.getText();
        if (pr.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Pulse Rate");
            return;
        }
        if (pr.length() > 0 && !pr.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Pulse Rate can contain only Numeric values");
            return;
        }
        Date dt = DateChooserEncDate.getDate();
        if (dt == null) {
            JOptionPane.showMessageDialog(this, "Please enter Date");
            return;

        }

        int encListSize = selectedPatient.getEncounterHist().getEncounterHist().size();
        if (encListSize > 0) {
            VitalSigns vs = selectedPatient.getEncounterHist().getEncounterHist().get(encListSize - 1).getVitalSign();
            vs.setTemperature(Short.parseShort(temp));
            vs.setRespirationRate(Short.parseShort(rr));
            vs.setBloodPressure(Integer.parseInt(bp));
            vs.setPulseRate(Integer.parseInt(pr));

            Encounter en = selectedPatient.getEncounterHist().getEncounterHist().get(encListSize - 1);
            en.setEncounterDate(dt);
        } else {
            txtTemp.setText("No record");
            txtBp.setText("No record");
            txtRespRate.setText("No record");
            txtPusleRate.setText("No record");
            DateChooserEncDate.setDate(null);

        }

        //Populate input data into Arraylist
        House houseObj = houseDir.findHouseFromName(house);
        //Community commObj = commDir.findCommunityFromName(comm);
        //City cityObj = cityDir.findCityFromName(city);

        selectedPatient.setName(name);
        selectedPatient.setAge(Short.parseShort(age));
        selectedPatient.setEmail(email);
        selectedPatient.setPhoneNo(Long.parseLong(phoneNo));
        selectedPatient.setGender(gender);
        selectedPatient.setHouse(houseObj);
        selectedPatient.setPhoneNo(Long.parseLong(phoneNo));
        selectedPatient.setPatientId(Integer.parseInt(patientId));
        selectedPatient.setUsername(userName);

        //patientDir.addNewPatient(name, Short.parseShort(age), email, gender, Long.parseLong(phoneNo), houseObj, cityObj, commObj, Integer.parseInt(patientId) , userName, pass);
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateTablePatient();
        JOptionPane.showMessageDialog(this, "Patient record updated");

        //Reset enc hist table and fields
        EncounterHistory selectedPatientHis = selectedPatientEncHist;
        DefaultTableModel encTableModel1 = (DefaultTableModel) tableEncHistory.getModel();
        encTableModel1.setRowCount(0);

        for (Encounter en : selectedPatientHis.getEncounterHist()) {

            Object[] row = new Object[5];
            row[0] = en;
            row[1] = en.getVitalSign().getBloodPressure();
            row[2] = en.getVitalSign().getRespirationRate();
            row[3] = en.getVitalSign().getPulseRate();
            row[4] = en.getEncounterDate();

            encTableModel1.addRow(row);

        }

        txtTemp3.setText("");
        txtRespRate3.setText("");
        txtBp3.setText("");
        txtPusleRate3.setText("");
        DateChooserEncDate3.setDate(null);

    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtPusleRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPusleRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPusleRateActionPerformed

    private void txtRespRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRateActionPerformed

    private void comboBoxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCityActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnCreateCommAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCommAdminActionPerformed
        // TODO add your handling code here:
        AddCommunityAdminJPanel newCommPanel = new AddCommunityAdminJPanel(cityDir, commDir, houseDir, patientDir, docDir, hospDir, commAdminDir);
        splitPaneSystemAdmin.setRightComponent(newCommPanel);

    }//GEN-LAST:event_btnCreateCommAdminActionPerformed

    private void btnCreateDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDocActionPerformed
        // TODO add your handling code here:
        AddDoctorJPanel newDocPanel = new AddDoctorJPanel(cityDir, commDir, houseDir, patientDir, docDir, hospDir);
        splitPaneSystemAdmin.setRightComponent(newDocPanel);

    }//GEN-LAST:event_btnCreateDocActionPerformed

    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        // TODO add your handling code here:

        AddPatientJPanel newPatientPanel = new AddPatientJPanel(cityDir, commDir, houseDir, patientDir);
        splitPaneSystemAdmin.setRightComponent(newPatientPanel);

    }//GEN-LAST:event_btnCreatePatientActionPerformed

    private void btnAddCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCityActionPerformed
        // TODO add your handling code here:

        String newCity = txtCity.getText();
        if (newCity.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter City Name");
            return;
        }

        City city = cityDir.addNewCity();
        city.setCityName(newCity);
        JOptionPane.showMessageDialog(this, "City Added Successfully");

        txtCity.setText("");

        //populate checkbox on Create Resources panel  
        //1
        //System.out.println("clicked combo box1");
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxSelectCity.setModel(cityComboBox);

        //2
        DefaultComboBoxModel cityComboBox2 = new DefaultComboBoxModel();
        cityComboBox2.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox2.addElement(c.getCityName());
        }

        comboBoxSelectCity2.setModel(cityComboBox2);
        populateResourcesTable();

    }//GEN-LAST:event_btnAddCityActionPerformed

    private void btnAddComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddComActionPerformed
        // TODO add your handling code here:

        String newComm = txtComm.getText();
        String selectedCity = comboBoxSelectCity.getSelectedItem().toString();

//        if (selectedCity.length() <= 0) {
//            JOptionPane.showMessageDialog(this, "Please select City");
//            return;
//        }
        if ("Select".equals(selectedCity)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }
        if (newComm.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Community Name");
            return;
        }

        City city = cityDir.findCityFromName(selectedCity);

        Community comm = commDir.addNewCommunity();
        comm.setCommName(newComm);
        comm.setCity(city);
        JOptionPane.showMessageDialog(this, "Community Added Successfully");

        txtComm.setText("");
        comboBoxSelectCity.setSelectedIndex(0);
        populateResourcesTable();

    }//GEN-LAST:event_btnAddComActionPerformed

    private void btnAddHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHouseActionPerformed
        // TODO add your handling code here:

        String newHouse = txtHouse.getText();
        String selectedComm = comboBoxSelectComm.getSelectedItem().toString();
        String selectedCity = comboBoxSelectCity2.getSelectedItem().toString();

        if (newHouse.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Community Name");
            return;
        }
        if ("Select".equals(selectedComm)) {
            JOptionPane.showMessageDialog(this, "Please select Community");
            return;
        }
        if ("Select".equals(selectedCity)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }

        Community comm = commDir.findCommunityFromName(selectedComm);
        House h = houseDir.addNewHouse();
        h.setHouseName(newHouse);
        h.setCommunity(comm);
        JOptionPane.showMessageDialog(this, "House Added Successfully");

        txtHouse.setText("");
        comboBoxSelectCity2.setSelectedIndex(0);
        comboBoxSelectComm.setSelectedIndex(0);
        populateResourcesTable();


    }//GEN-LAST:event_btnAddHouseActionPerformed

    private void comboBoxSelectCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSelectCityActionPerformed
        // TODO add your handling code here:
//        System.out.println("clicked combo box1");
//        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
//        cityComboBox.addElement("Select");
//        
//        for (City c : cityDir.getCityDirectory()) {
//            cityComboBox.addElement(c.getCityName());
//        }
//        
//        comboBoxSelectCity.setModel(cityComboBox);

    }//GEN-LAST:event_comboBoxSelectCityActionPerformed

    private void comboBoxSelectCity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSelectCity2ActionPerformed
        // TODO add your handling code here:

        DefaultComboBoxModel commComboBox = new DefaultComboBoxModel();
        commComboBox.addElement("Select");

        String selectedCity = comboBoxSelectCity2.getSelectedItem().toString();
        City city = cityDir.findCityFromName(selectedCity);

        for (Community c : commDir.findCommunitiesInCity(city)) {
            commComboBox.addElement(c.getCommName());
        }

        comboBoxSelectComm.setModel(commComboBox);
    }//GEN-LAST:event_comboBoxSelectCity2ActionPerformed

    private void comboBoxSelectCityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSelectCityMouseClicked
        // TODO add your handling code here:
        //System.out.println("clicked combo box1");
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxSelectCity.setModel(cityComboBox);
    }//GEN-LAST:event_comboBoxSelectCityMouseClicked

    private void comboBoxSelectCity2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSelectCity2MouseClicked
        // TODO add your handling code here:
        //System.out.println("clicked combo box2");

        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxSelectCity2.setModel(cityComboBox);
    }//GEN-LAST:event_comboBoxSelectCity2MouseClicked

    private void comboBoxSelectCommMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSelectCommMouseClicked
        // TODO add your handling code here:
//                
//        DefaultComboBoxModel commComboBox = new DefaultComboBoxModel();
//        commComboBox.addElement("Select");
//        
//        String selectedCity = comboBoxSelectCity2.getSelectedItem().toString();
//        City city = cityDir.findCityFromName(selectedCity);
//        
//        for (Community c : commDir.findCommunitiesInCity(city)) {
//            commComboBox.addElement(c.getCommName());
//        }
//        
//        comboBoxSelectComm.setModel(commComboBox);
    }//GEN-LAST:event_comboBoxSelectCommMouseClicked

    private void btnAddHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHospActionPerformed
        // TODO add your handling code here:

        String newHosp = txtHospitalName.getText();
        String selectedComm = comboBoxHospComm.getSelectedItem().toString();
        String selectedCity = comboBoxHospCity.getSelectedItem().toString();

        if (newHosp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Community Name");
            return;
        }
        if ("Select".equals(selectedComm)) {
            JOptionPane.showMessageDialog(this, "Please select Community");
            return;
        }
        if ("Select".equals(selectedCity)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }

        Community comm = commDir.findCommunityFromName(selectedComm);
        City city = cityDir.findCityFromName(selectedCity);

        Hospital h = hospDir.addNewHospital();
        h.setHospitalName(newHosp);
        h.setCommunity(comm);
        h.setCity(city);

        JOptionPane.showMessageDialog(this, "Hospital Added Successfully");

        txtHospitalName.setText("");
        comboBoxHospComm.setSelectedIndex(0);
        comboBoxHospCity.setSelectedIndex(0);
        populateTableHospitals();
    }//GEN-LAST:event_btnAddHospActionPerformed

    private void comboBoxHospCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHospCityActionPerformed
        // TODO add your handling code here:

        DefaultComboBoxModel commComboBox = new DefaultComboBoxModel();
        commComboBox.addElement("Select");

        String selectedCity = comboBoxHospCity.getSelectedItem().toString();
        City city = cityDir.findCityFromName(selectedCity);

        for (Community c : commDir.findCommunitiesInCity(city)) {
            commComboBox.addElement(c.getCommName());
        }

        comboBoxHospComm.setModel(commComboBox);
    }//GEN-LAST:event_comboBoxHospCityActionPerformed

    private void btnViewCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCityActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableCities.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view City");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableCities.getModel();
        City selectedCity = (City) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtCityView.setText(selectedCity.getCityName());


    }//GEN-LAST:event_btnViewCityActionPerformed

    private void btnUpdateCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCityActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tableCities.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view City");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableCities.getModel();
        City selectedCity = (City) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtCityView.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid City");
            return;
        }

        selectedCity.setCityName(name);
        txtCityView.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateResourcesTable();
        JOptionPane.showMessageDialog(this, "City updated");

    }//GEN-LAST:event_btnUpdateCityActionPerformed

    private void btnDeleteCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCityActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tableCities.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view City");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableCities.getModel();
        City selectedCity = (City) model.getValueAt(selectedRowIndex, 0);

        cityDir.deleteCity(selectedCity);

        JOptionPane.showMessageDialog(this, "Selected City deleted");

        model.setRowCount(0);

        populateResourcesTable();

        //to set view profile fields blank when a record is deleted
        txtCityView.setText("");


    }//GEN-LAST:event_btnDeleteCityActionPerformed

    private void btnDeleteCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCommActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableComm.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete Community");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableComm.getModel();
        Community selectedcomm = (Community) model.getValueAt(selectedRowIndex, 0);

        commDir.deleteCommunity(selectedcomm);

        JOptionPane.showMessageDialog(this, "Selected Community deleted");

        model.setRowCount(0);

        populateResourcesTable();

        //to set view profile fields blank when a record is deleted
        txtCommView.setText("");
    }//GEN-LAST:event_btnDeleteCommActionPerformed

    private void btnDeleteHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHouseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHouses.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete House");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHouses.getModel();
        House selectedHouse = (House) model.getValueAt(selectedRowIndex, 0);

        houseDir.deleteHouse(selectedHouse);

        JOptionPane.showMessageDialog(this, "Selected House deleted");

        model.setRowCount(0);

        populateResourcesTable();

        //to set view profile fields blank when a record is deleted
        txtHouseView.setText("");
    }//GEN-LAST:event_btnDeleteHouseActionPerformed

    private void btnDeleteHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHospActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHospitals.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Hospital");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHospitals.getModel();
        Hospital selectedHosp = (Hospital) model.getValueAt(selectedRowIndex, 0);

        hospDir.deleteHospital(selectedHosp);

        JOptionPane.showMessageDialog(this, "Selected Hospital deleted");

        model.setRowCount(0);

        populateTableHospitals();

        //to set view profile fields blank when a record is deleted
        txtHospView.setText("");
    }//GEN-LAST:event_btnDeleteHospActionPerformed

    private void btnViewCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCommActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableComm.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Community");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableComm.getModel();
        Community selectedComm = (Community) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtCommView.setText(selectedComm.getCommName());
    }//GEN-LAST:event_btnViewCommActionPerformed

    private void btnViewHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHouseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHouses.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Houses");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHouses.getModel();
        House selectedHouse = (House) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtHouseView.setText(selectedHouse.getHouseName());
    }//GEN-LAST:event_btnViewHouseActionPerformed

    private void btnUpdateCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCommActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableComm.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update Community");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableComm.getModel();
        Community selectedComm = (Community) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtCommView.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid City");
            return;
        }

        selectedComm.setCommName(name);
        txtCityView.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateResourcesTable();
        JOptionPane.showMessageDialog(this, "Community updated");
    }//GEN-LAST:event_btnUpdateCommActionPerformed

    private void btnUpdateHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHouseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHouses.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view House");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHouses.getModel();
        House selectedHouse = (House) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtHouseView.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid House");
            return;
        }

        selectedHouse.setHouseName(name);
        txtHouseView.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateResourcesTable();
        JOptionPane.showMessageDialog(this, "House updated");
    }//GEN-LAST:event_btnUpdateHouseActionPerformed

    private void btnUpdateHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHospActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHospitals.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Hospital");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHospitals.getModel();
        Hospital selectedHosp = (Hospital) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtHospView.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Hospital name");
            return;
        }

        selectedHosp.setHospitalName(name);
        txtHospView.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateTableHospitals();
        JOptionPane.showMessageDialog(this, "Hospital updated");

    }//GEN-LAST:event_btnUpdateHospActionPerformed

    private void btnViewHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHospActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHospitals.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Hospital");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHospitals.getModel();
        Hospital selectedHosp = (Hospital) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtHospView.setText(selectedHosp.getHospitalName());
    }//GEN-LAST:event_btnViewHospActionPerformed

    private void btnCreateHospAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHospAdminActionPerformed
        // TODO add your handling code here:
        AddHospitalAdminJPanel newHospPanel = new AddHospitalAdminJPanel(cityDir, commDir, houseDir, patientDir, docDir, hospDir, hosAdminDir);
        splitPaneSystemAdmin.setRightComponent(newHospPanel);

    }//GEN-LAST:event_btnCreateHospAdminActionPerformed

    private void btnLogout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout1ActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_btnLogout1ActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void btnCreateDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDActionPerformed
        // TODO add your handling code here:

        Doctor doc = loginDoc;
        //Validation of Input Fields - START
        //Name
        String name = txtNameD.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAgeD.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }
        //Email
        String email = txtEmailD.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }
        //Phone Number
        String phoneNo = txtPhoneNoD.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }

        //Gender
        String gender = comboBoxgenderD.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }

        //Doc ID
        String docId = txtDocIdD.getText();
        if (docId.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Doctor ID");
            return;
        }
        if (docId.length() > 0 && !docId.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Doctor ID can contain only Numeric values");
            return;
        }
        if (docId.length() > 9) {
            JOptionPane.showMessageDialog(this, "Docotor ID should be less than 10 digits");
            return;
        }
        //Username
        String userName = txtUsernameD.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        //pass
        String pass = txtPassD.getText();
        if (pass.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        // Not Mandatory Attributes
        String hosp = comboBoxHospD.getSelectedItem().toString();
        if ("Select".equals(hosp)) {
            JOptionPane.showMessageDialog(this, "Please select Hospital");
            return;
        }

        //Populate input data into Arraylist
        Hospital hospObj = hospDir.findHospitalFromName(hosp);

        doc.setName(name);
        doc.setAge(Short.parseShort(age));
        doc.setEmail(email);
        doc.setPhoneNo(Long.parseLong(phoneNo));
        doc.setGender(gender);
        doc.setHospital(hospObj);
        doc.setDocId(Integer.parseInt(docId));
        doc.setUsername(userName);

        //patientDir.addNewPatient(name, Short.parseShort(age), email, gender, Long.parseLong(phoneNo), houseObj, cityObj, commObj, Integer.parseInt(patientId) , userName, pass);
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        JOptionPane.showMessageDialog(this, "Doctor record updated");
    }//GEN-LAST:event_btnCreateDActionPerformed

    private void txtNameDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameDActionPerformed

    private void txtPassDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassDActionPerformed

    private void txtPusleRate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPusleRate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPusleRate1ActionPerformed

    private void txtRespRate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRate1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String temp = txtTemp1.getText();
        String respRate = txtRespRate1.getText();
        String bp = txtBp1.getText();
        String pulseRate = txtPusleRate1.getText();
        Date date = DateChooserEncDate1.getDate();

        //Gender
        String patient1 = comboBoxDocPat.getSelectedItem().toString();
        if ("Select".equals(patient1)) {
            JOptionPane.showMessageDialog(this, "Please select Patient");
            return;
        }

        //temp
        if (temp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Temperature");
            return;
        }
        if (temp.length() > 0 && !temp.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Temperature can contain only Numeric values");
            return;
        }

        //respRate
        if (respRate.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter resperation rate");
            return;
        }
        if (respRate.length() > 0 && !respRate.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Resperation rate can contain only Numeric values");
            return;
        }

        //bp
        if (bp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Blood Pressure");
            return;
        }
        if (bp.length() > 0 && !bp.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Blood Pressure can contain only Numeric values");
            return;
        }

        //pulseRate
        if (pulseRate.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Pulse Rate");
            return;
        }
        if (pulseRate.length() > 0 && !pulseRate.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Pulse Rate can contain only Numeric values");
            return;
        }

        //date
        if (date == null) {
            JOptionPane.showMessageDialog(this, "Please select valid date");
            return;
        }

        Patient patient = (Patient) comboBoxDocPat.getSelectedItem();

        Encounter enc = new Encounter(patient, loginDoc, true);
        VitalSigns vs = enc.getVitalSign();

        vs.setTemperature(Short.parseShort(temp));
        vs.setBloodPressure(Integer.parseInt(bp));
        vs.setPulseRate(Integer.parseInt(pulseRate));
        vs.setRespirationRate(Short.parseShort(respRate));

        enc.setEncounterDate(date);

        patient.getEncounterHist().getEncounterHist().add(enc);

        JOptionPane.showMessageDialog(this, "Encounter Successfully Added");

        txtTemp1.setText("");
        txtRespRate1.setText("");
        txtBp1.setText("");
        txtPusleRate1.setText("");
        DateChooserEncDate1.setDate(null);

        // update encounter table
        DefaultTableModel encTableModel = (DefaultTableModel) tableEncHistory1.getModel();
        encTableModel.setRowCount(0);

        for (Encounter en : patient.getEncounterHist().getEncounterHist()) {

            Object[] row = new Object[5];

            row[0] = en.getVitalSign().getTemperature();
            row[1] = en.getVitalSign().getBloodPressure();
            row[2] = en.getVitalSign().getRespirationRate();
            row[3] = en.getVitalSign().getPulseRate();
            row[4] = en.getEncounterDate();

            encTableModel.addRow(row);

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboBoxDocPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDocPatActionPerformed
        // TODO add your handling code here:

        // populate encounter table
        DefaultTableModel encTableModel = (DefaultTableModel) tableEncHistory1.getModel();
        encTableModel.setRowCount(0);

        Patient patient = (Patient) comboBoxDocPat.getSelectedItem();

        for (Encounter en : patient.getEncounterHist().getEncounterHist()) {

            Object[] row = new Object[5];

            row[0] = en.getVitalSign().getTemperature();
            row[1] = en.getVitalSign().getBloodPressure();
            row[2] = en.getVitalSign().getRespirationRate();
            row[3] = en.getVitalSign().getPulseRate();
            row[4] = en.getEncounterDate();

            encTableModel.addRow(row);

        }

    }//GEN-LAST:event_comboBoxDocPatActionPerformed

    private void txtPassPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassPActionPerformed

    private void txtNamePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamePActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamePActionPerformed

    private void btnCreateD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateD1ActionPerformed
        // TODO add your handling code here:
        //Name
        String name = txtNameP.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAgeP.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }

        //Email
        String email = txtEmailP.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }

        //Phone Number
        String phoneNo = txtPhoneNoP.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }

        //Gender 
        String gender = comboBoxgenderP.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }
        //Patient ID
        String patientId = txtPatientIdP.getText();
        if (patientId.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Patient ID");
            return;
        }
        if (patientId.length() > 0 && !patientId.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Patient ID can contain only Numeric values");
            return;
        }
        if (patientId.length() > 9) {
            JOptionPane.showMessageDialog(this, "Patient ID should be less than 10 digits");
            return;
        }

        //Username
        String userName = txtUsernameP.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        //Password
        String pass = txtPassP.getText();
        if (pass.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Password");
            return;
        }

        Patient pat = loginPatient;
        House houseObj = pat.getHouse();
        Community commObj = houseObj.getCommunity();
        City cityObj = commObj.getCity();
//        
        patientDir.addNewPatient(name, Short.parseShort(age), email, gender, Long.parseLong(phoneNo), houseObj, cityObj, commObj, Integer.parseInt(patientId), userName, pass);
//        
//        
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        JOptionPane.showMessageDialog(this, "Patient record updated");


    }//GEN-LAST:event_btnCreateD1ActionPerformed

    private void jTabbedPane3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane3MouseClicked

    private void btnLogout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout2ActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_btnLogout2ActionPerformed

    private void txtRespRate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRate2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRate2ActionPerformed

    private void txtPusleRate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPusleRate2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPusleRate2ActionPerformed

    private void txtPassHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassHAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassHAActionPerformed

    private void txtNameHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameHAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameHAActionPerformed

    private void btnCreateHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHAActionPerformed
        // TODO add your handling code here:
        //Validation of Input Fields - START

        //Name
        String name = txtNameHA.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAgeHA.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }
        //Email
        String email = txtEmailHA.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }
        //Phone Number
        String phoneNo = txtPhoneNoHA.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        //Gender 
        String gender = comboBoxgenderHA.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }

        //Username
        String userName = txtUsernameHA.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        //Password
        String pass = txtPassHA.getText();
        if (pass.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Password");
            return;
        }

        HospitalAdmin ha = loginHosAdmin;

        ha.setName(name);
        ha.setAge(Short.parseShort(age));
        ha.setEmail(email);
        ha.setPhoneNo(Long.parseLong(phoneNo));
        ha.setGender(gender);
        ha.setUsername(userName);
        ha.setPassword(pass);

        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        JOptionPane.showMessageDialog(this, "Details updated");


    }//GEN-LAST:event_btnCreateHAActionPerformed

    private void jTabbedPane4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane4MouseClicked
        // TODO add your handling code here:
        populateTableHospitalsHospAdmin();
        populateTablePatientHospAdmin();
        populateTableDoctorHospAdmin();
        //populate checkbox on Create Resources panel 
        //1
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxHospCity1.setModel(cityComboBox);

//        //2
//        DefaultComboBoxModel cityComboBox2 = new DefaultComboBoxModel();
//        cityComboBox2.addElement("Select");
//        
//        for (City c : cityDir.getCityDirectory()) {
//            cityComboBox2.addElement(c.getCityName());
//        }
//        
//        comboBoxSelectCity2.setModel(cityComboBox2);
//        
//        //populate checkbox on Create Hospital panel 
//        //1
//        DefaultComboBoxModel cityComboBox3 = new DefaultComboBoxModel();
//        cityComboBox3.addElement("Select");
//        
//        for (City c : cityDir.getCityDirectory()) {
//            cityComboBox3.addElement(c.getCityName());
//        }
//        comboBoxHospCity.setModel(cityComboBox2);
    }//GEN-LAST:event_jTabbedPane4MouseClicked

    private void btnLogout3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout3ActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_btnLogout3ActionPerformed

    private void btnCreatePatient1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatient1ActionPerformed
        // TODO add your handling code here:
        AddPatientJPanel newPatientPanel = new AddPatientJPanel(cityDir, commDir, houseDir, patientDir);
        splitPaneSystemAdmin1.setRightComponent(newPatientPanel);

    }//GEN-LAST:event_btnCreatePatient1ActionPerformed

    private void btnCreateDoc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDoc1ActionPerformed
        // TODO add your handling code here:
        AddDoctorJPanel newDocPanel = new AddDoctorJPanel(cityDir, commDir, houseDir, patientDir, docDir, hospDir);
        splitPaneSystemAdmin1.setRightComponent(newDocPanel);

    }//GEN-LAST:event_btnCreateDoc1ActionPerformed

    private void txtName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtName1ActionPerformed

    private void comboBoxCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCity1ActionPerformed

    private void txtRespRate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRate4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRate4ActionPerformed

    private void txtPusleRate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPusleRate4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPusleRate4ActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tablePatients1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Patient");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tablePatients1.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtName1.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAge1.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }
        //Email
        String email = txtEmail1.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }
        //Phone Number
        String phoneNo = txtPhoneNo1.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        //Gender
        String gender = comboBoxgender1.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }

        String city = comboBoxCity1.getSelectedItem().toString();
        if ("Select".equals(city)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }
        String comm = comboBoxComm1.getSelectedItem().toString();
        if ("Select".equals(comm)) {
            JOptionPane.showMessageDialog(this, "Please select Comunity");
            return;
        }
        String house = comboBoxHouse1.getSelectedItem().toString();
        if ("Select".equals(house)) {
            JOptionPane.showMessageDialog(this, "Please select House");
            return;
        }

        // Not Mandatory Attributes
        //Patient ID
        String patientId = txtPatientId1.getText();
        if (patientId.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Patient ID");
            return;
        }
        if (patientId.length() > 0 && !patientId.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Patient ID can contain only Numeric values");
            return;
        }
        if (patientId.length() > 9) {
            JOptionPane.showMessageDialog(this, "Patient ID should be less than 10 digits");
            return;
        }

        //Username
        String userName = txtUsernamePat1.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        //Populate input data into Arraylist
        House houseObj = houseDir.findHouseFromName(house);
        //Community commObj = commDir.findCommunityFromName(comm);
        //City cityObj = cityDir.findCityFromName(city);

        selectedPatient.setName(name);
        selectedPatient.setAge(Short.parseShort(age));
        selectedPatient.setEmail(email);
        selectedPatient.setPhoneNo(Long.parseLong(phoneNo));
        selectedPatient.setGender(gender);
        selectedPatient.setHouse(houseObj);
        selectedPatient.setPhoneNo(Long.parseLong(phoneNo));
        selectedPatient.setPatientId(Integer.parseInt(patientId));
        selectedPatient.setUsername(userName);

        //patientDir.addNewPatient(name, Short.parseShort(age), email, gender, Long.parseLong(phoneNo), houseObj, cityObj, commObj, Integer.parseInt(patientId) , userName, pass);
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateTablePatientHospAdmin();
        JOptionPane.showMessageDialog(this, "Patient record updated");

    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView1ActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tablePatients1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Patient");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tablePatients1.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtName1.setText(selectedPatient.getName());
        txtAge1.setText(String.valueOf(selectedPatient.getAge()));
        txtEmail1.setText(selectedPatient.getEmail());
        txtPhoneNo1.setText(String.valueOf(selectedPatient.getPhoneNo()));
        txtEmail1.setText(selectedPatient.getEmail());
        txtPatientId1.setText(String.valueOf(selectedPatient.getPatientId()));
        txtUsernamePat1.setText(selectedPatient.getUsername());

        //int index = p.getEncounterHist().getEncounterHist().size();
        //row[6] = p.getEncounterHist().getEncounterHist().get(index).getIsSick();
        int encListSize = selectedPatient.getEncounterHist().getEncounterHist().size();
        if (encListSize > 0) {
            VitalSigns vs = selectedPatient.getEncounterHist().getEncounterHist().get(encListSize - 1).getVitalSign();
            txtTemp4.setText(String.valueOf(vs.getTemperature()));
            txtBp4.setText(String.valueOf(vs.getBloodPressure()));
            txtRespRate4.setText(String.valueOf(vs.getRespirationRate()));
            txtPusleRate4.setText(String.valueOf(vs.getPulseRate()));
            DateChooserEncDate2.setDate(selectedPatient.getEncounterHist().getEncounterHist().get(encListSize - 1).getEncounterDate());
        } else {
            txtTemp4.setText("No record");
            txtBp4.setText("No record");
            txtRespRate4.setText("No record");
            txtPusleRate4.setText("No record");
        }

        // city
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxCity1.setModel(cityComboBox);
        // community
        DefaultComboBoxModel commComboBox = new DefaultComboBoxModel();
        commComboBox.addElement("Select");

        for (Community c : commDir.getCommunityDirectory()) {
            commComboBox.addElement(c.getCommName());
        }

        comboBoxComm1.setModel(commComboBox);

        // house
        DefaultComboBoxModel houseComboBox = new DefaultComboBoxModel();
        houseComboBox.addElement("Select");

        for (House h : houseDir.getHouseDirectory()) {
            houseComboBox.addElement(h.getHouseName());
        }

        comboBoxHouse1.setModel(houseComboBox);

        //Set Gender
        String currentGender = selectedPatient.getGender();
        for (int i = 0; i < comboBoxgender1.getItemCount(); i++) {
            String item = comboBoxgender1.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxgender1.setSelectedIndex(i);
                break;
            }
        }

        //Set City
        String city = selectedPatient.getHouse().getCommunity().getCity().getCityName();
        for (int i = 0; i < comboBoxCity1.getItemCount(); i++) {
            String item = comboBoxCity1.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(city)) {
                comboBoxCity1.setSelectedIndex(i);
                break;
            }
        }

        //Set Community
        String comm = selectedPatient.getHouse().getCommunity().getCommName();
        for (int i = 0; i < comboBoxComm1.getItemCount(); i++) {
            String item = comboBoxComm1.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(comm)) {
                comboBoxComm1.setSelectedIndex(i);
                break;
            }
        }

        //Set House
        String house = selectedPatient.getHouse().getHouseName();
        for (int i = 0; i < comboBoxHouse1.getItemCount(); i++) {
            String item = comboBoxHouse1.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(house)) {
                comboBoxHouse1.setSelectedIndex(i);
                break;
            }
        }

        // populate encounter table
        DefaultTableModel encTableModel = (DefaultTableModel) tableEncHistory4.getModel();
        encTableModel.setRowCount(0);

        for (Encounter en : selectedPatient.getEncounterHist().getEncounterHist()) {

            Object[] row = new Object[5];
            row[0] = en.getVitalSign().getTemperature();
            row[1] = en.getVitalSign().getBloodPressure();
            row[2] = en.getVitalSign().getRespirationRate();
            row[3] = en.getVitalSign().getPulseRate();
            row[6] = en.getEncounterDate();

            encTableModel.addRow(row);

        }

    }//GEN-LAST:event_btnView1ActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tablePatients1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Patient");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tablePatients1.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        patientDir.deletePatient(selectedPatient);

        JOptionPane.showMessageDialog(this, "Selected Patient record deleted");

        model.setRowCount(0);

        populateTablePatientHospAdmin();    // perform search again within updated employee list

        //to set view profile fields blank when a record is deleted
        txtName1.setText("");
        txtPatientId1.setText("");
        txtAge1.setText("");
        txtUsernamePat1.setText("");
        txtEmail1.setText("");
        txtPhoneNo1.setText("");
        comboBoxgender1.setSelectedIndex(0);

        if (comboBoxCity1.getSelectedItem() != null) {
            comboBoxCity1.setSelectedIndex(0);
            comboBoxComm1.setSelectedIndex(0);
            comboBoxHouse1.setSelectedIndex(0);
        }

    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void txtNameDoc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameDoc1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameDoc1ActionPerformed

    private void comboBoxHosp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHosp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxHosp1ActionPerformed

    private void btnSaveEdits1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEdits1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableDoc1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Doctor");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableDoc1.getModel();
        Doctor selectedDoc = (Doctor) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtNameDoc1.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAgeDoc1.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }
        //Email
        String email = txtEmailDoc1.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }
        //Phone Number
        String phoneNo = txtPhoneNoDoc1.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }

        //Gender
        String gender = comboBoxGenderDoc1.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }

        // Not Mandatory Attributes
        String hosp = comboBoxHosp1.getSelectedItem().toString();
        if ("Select".equals(hosp)) {
            JOptionPane.showMessageDialog(this, "Please select Hospital");
            return;
        }

        //Doc ID
        String docId = txtPatientId1.getText();
        if (docId.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Doctor ID");
            return;
        }
        if (docId.length() > 0 && !docId.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Doctor ID can contain only Numeric values");
            return;
        }
        if (docId.length() > 9) {
            JOptionPane.showMessageDialog(this, "Doctor ID should be less than 10 digits");
            return;
        }
        //Username
        String userName = txtUsernameDoc1.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }
        //Populate input data into Arraylist

        Hospital hospObj = hospDir.findHospitalFromName(hosp);

        selectedDoc.setName(name);
        selectedDoc.setAge(Short.parseShort(age));
        selectedDoc.setEmail(email);
        selectedDoc.setPhoneNo(Long.parseLong(phoneNo));
        selectedDoc.setGender(gender);
        selectedDoc.setHospital(hospObj);
        selectedDoc.setDocId(Integer.parseInt(docId));
        selectedDoc.setUsername(userName);

        //patientDir.addNewPatient(name, Short.parseShort(age), email, gender, Long.parseLong(phoneNo), houseObj, cityObj, commObj, Integer.parseInt(patientId) , userName, pass);
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateTableDoctorHospAdmin();
        JOptionPane.showMessageDialog(this, "Doctor record updated");
    }//GEN-LAST:event_btnSaveEdits1ActionPerformed

    private void btnViewDoc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDoc1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableDoc1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Doctor");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableDoc1.getModel();
        Doctor selectedDoc = (Doctor) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtNameDoc1.setText(selectedDoc.getName());
        txtAgeDoc1.setText(String.valueOf(selectedDoc.getAge()));
        txtEmailDoc1.setText(selectedDoc.getEmail());
        txtPhoneNoDoc1.setText(String.valueOf(selectedDoc.getPhoneNo()));
        txtEmailDoc1.setText(selectedDoc.getEmail());
        txtDocId1.setText(String.valueOf(selectedDoc.getDocId()));
        txtUsernameDoc1.setText(selectedDoc.getUsername());

        // add hospitals in combobox
        DefaultComboBoxModel hospComboBox = new DefaultComboBoxModel();
        hospComboBox.addElement("Select");

        for (Hospital c : hospDir.getHospitalDirectory()) {
            hospComboBox.addElement(c.getHospitalName());
        }
        comboBoxHosp1.setModel(hospComboBox);

        // Select Hospital
        //Set Gender
        String currentGender = selectedDoc.getGender();
        for (int i = 0; i < comboBoxGenderDoc1.getItemCount(); i++) {
            String item = comboBoxGenderDoc1.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxGenderDoc1.setSelectedIndex(i);
                break;
            }
        }

        //Set Hospital
        String hosp = selectedDoc.getHospital().getHospitalName();
        for (int i = 0; i < comboBoxHosp1.getItemCount(); i++) {
            String item = comboBoxHosp1.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(hosp)) {
                comboBoxHosp1.setSelectedIndex(i);
                break;
            }
        }
    }//GEN-LAST:event_btnViewDoc1ActionPerformed

    private void btnDeleteDoc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDoc1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableDoc1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Doctor");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableDoc1.getModel();
        Doctor selectedDoc = (Doctor) model.getValueAt(selectedRowIndex, 0);

        docDir.deleteDoctor(selectedDoc);

        JOptionPane.showMessageDialog(this, "Selected Doctor record deleted");

        model.setRowCount(0);

        populateTableDoctorHospAdmin();    // perform search again within updated employee list

        //to set view profile fields blank when a record is deleted
        txtNameDoc1.setText("");
        txtDocId1.setText("");
        txtAgeDoc1.setText("");
        txtUsernameDoc1.setText("");
        txtEmailDoc1.setText("");
        txtPhoneNoDoc1.setText("");
        comboBoxGenderDoc1.setSelectedIndex(0);

        if (comboBoxHosp1.getSelectedItem() != null) {
            comboBoxHosp1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnDeleteDoc1ActionPerformed

    private void comboBoxHospCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHospCity1ActionPerformed
        // TODO add your handling code here:

        DefaultComboBoxModel commComboBox = new DefaultComboBoxModel();
        commComboBox.addElement("Select");

        String selectedCity = comboBoxHospCity1.getSelectedItem().toString();
        City city = cityDir.findCityFromName(selectedCity);

        for (Community c : commDir.findCommunitiesInCity(city)) {
            commComboBox.addElement(c.getCommName());
        }

        comboBoxHospComm1.setModel(commComboBox);
    }//GEN-LAST:event_comboBoxHospCity1ActionPerformed

    private void comboBoxHospComm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHospComm1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxHospComm1ActionPerformed

    private void btnAddHosp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHosp1ActionPerformed
        // TODO add your handling code here:

        String newHosp = txtHospitalName1.getText();
        String selectedComm = comboBoxHospComm1.getSelectedItem().toString();
        String selectedCity = comboBoxHospCity1.getSelectedItem().toString();

        if (newHosp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Hospital Name");
            return;
        }
        if ("Select".equals(selectedComm)) {
            JOptionPane.showMessageDialog(this, "Please select Community");
            return;
        }
        if ("Select".equals(selectedCity)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }

        Community comm = commDir.findCommunityFromName(selectedComm);
        City city = cityDir.findCityFromName(selectedCity);

        Hospital h = hospDir.addNewHospital();
        h.setHospitalName(newHosp);
        h.setCommunity(comm);
        h.setCity(city);

        JOptionPane.showMessageDialog(this, "Hospital Added Successfully");

        txtHospitalName1.setText("");
        comboBoxHospComm1.setSelectedIndex(0);
        comboBoxHospCity1.setSelectedIndex(0);

        populateTableHospitalsHospAdmin();
    }//GEN-LAST:event_btnAddHosp1ActionPerformed

    private void btnUpdateHosp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHosp1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHospitals1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Hospital");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHospitals1.getModel();
        Hospital selectedHosp = (Hospital) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtHospView1.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Hospital name");
            return;
        }

        selectedHosp.setHospitalName(name);
        txtHospView1.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateTableHospitalsHospAdmin();
        JOptionPane.showMessageDialog(this, "Hospital updated");
    }//GEN-LAST:event_btnUpdateHosp1ActionPerformed

    private void btnDeleteHosp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHosp1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHospitals1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Hospital");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHospitals1.getModel();
        Hospital selectedHosp = (Hospital) model.getValueAt(selectedRowIndex, 0);

        hospDir.deleteHospital(selectedHosp);

        JOptionPane.showMessageDialog(this, "Selected Hospital deleted");

        model.setRowCount(0);

        populateTableHospitalsHospAdmin();

        //to set view profile fields blank when a record is deleted
        txtHospView1.setText("");
    }//GEN-LAST:event_btnDeleteHosp1ActionPerformed

    private void btnViewHosp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHosp1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHospitals1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Hospital");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHospitals1.getModel();
        Hospital selectedHosp = (Hospital) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtHospView1.setText(selectedHosp.getHospitalName());
    }//GEN-LAST:event_btnViewHosp1ActionPerformed

    private void txtPassCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassCAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassCAActionPerformed

    private void txtNameCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameCAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameCAActionPerformed

    private void btnCreateHA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateHA1ActionPerformed
        // TODO add your handling code here:
        //Validation of Input Fields - START

        //Name
        String name = txtNameCA.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name");
            return;
        }

        //Age
        String age = txtAgeCA.getText();
        if (age.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Age");
            return;
        }
        if (age.length() > 0 && !age.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Age can contain only Numeric values");
            return;
        }
        //Email
        String email = txtEmailCA.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Email address");
            return;
        }
        //Phone Number
        String phoneNo = txtPhoneNoCA.getText();
        if (phoneNo.length() < 10 || phoneNo.length() > 10) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }
        if (phoneNo.length() > 0 && !phoneNo.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid 10 digits Phone Number");
            return;
        }

        //Gender 
        String gender = comboBoxgenderCA.getSelectedItem().toString();
        if ("Select".equals(gender)) {
            JOptionPane.showMessageDialog(this, "Please select Gender");
            return;
        }

        //Username
        String userName = txtUsernameCA.getText();
        if (userName.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Username");
            return;
        }

        //Password
        String pass = txtPassCA.getText();
        if (pass.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Password");
            return;
        }

        CommunityAdmin ha = loginCommAdmin;

        ha.setName(name);
        ha.setAge(Short.parseShort(age));
        ha.setEmail(email);
        ha.setPhoneNo(Long.parseLong(phoneNo));
        ha.setGender(gender);
        ha.setUsername(userName);
        ha.setPassword(pass);

        JOptionPane.showMessageDialog(this, "Details updated");


    }//GEN-LAST:event_btnCreateHA1ActionPerformed

    private void jTabbedPane5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane5MouseClicked
        // TODO add your handling code here:

        populateResourcesTableCommAdmin();
        //populate checkbox on Create Resources panel 
        //1
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxSelectCity1.setModel(cityComboBox);

        //2
        DefaultComboBoxModel cityComboBox2 = new DefaultComboBoxModel();
        cityComboBox2.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox2.addElement(c.getCityName());
        }

        comboBoxSelectCity3.setModel(cityComboBox2);
    }//GEN-LAST:event_jTabbedPane5MouseClicked

    private void btnLogout4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout4ActionPerformed
        // TODO add your handling code here:
        logout();
    }//GEN-LAST:event_btnLogout4ActionPerformed

    private void btnAddCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCity1ActionPerformed
        // TODO add your handling code here:

        String newCity = txtCity1.getText();
        if (newCity.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter City Name");
            return;
        }

        City city = cityDir.addNewCity();
        city.setCityName(newCity);
        JOptionPane.showMessageDialog(this, "City Added Successfully");

        txtCity1.setText("");

        //populate checkbox on Create Resources panel  
        //1
        DefaultComboBoxModel cityComboBox = new DefaultComboBoxModel();
        cityComboBox.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox.addElement(c.getCityName());
        }

        comboBoxSelectCity1.setModel(cityComboBox);

        //2
        DefaultComboBoxModel cityComboBox2 = new DefaultComboBoxModel();
        cityComboBox2.addElement("Select");

        for (City c : cityDir.getCityDirectory()) {
            cityComboBox2.addElement(c.getCityName());
        }

        comboBoxSelectCity3.setModel(cityComboBox2);
        populateResourcesTableCommAdmin();
    }//GEN-LAST:event_btnAddCity1ActionPerformed

    private void btnAddCom1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCom1ActionPerformed
        // TODO add your handling code here:
        String newComm = txtComm1.getText();
        String selectedCity = comboBoxSelectCity1.getSelectedItem().toString();

//        if (selectedCity.length() <= 0) {
//            JOptionPane.showMessageDialog(this, "Please select City");
//            return;
//        }
        if ("Select".equals(selectedCity)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }
        if (newComm.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Community Name");
            return;
        }

        City city = cityDir.findCityFromName(selectedCity);

        Community comm = commDir.addNewCommunity();
        comm.setCommName(newComm);
        comm.setCity(city);
        JOptionPane.showMessageDialog(this, "Community Added Successfully");

        txtComm1.setText("");
        comboBoxSelectCity1.setSelectedIndex(0);
        populateResourcesTableCommAdmin();


    }//GEN-LAST:event_btnAddCom1ActionPerformed

    private void comboBoxSelectCity1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSelectCity1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSelectCity1MouseClicked

    private void comboBoxSelectCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSelectCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSelectCity1ActionPerformed

    private void comboBoxSelectCity3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSelectCity3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSelectCity3MouseClicked

    private void comboBoxSelectCity3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSelectCity3ActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel commComboBox = new DefaultComboBoxModel();
        commComboBox.addElement("Select");

        String selectedCity = comboBoxSelectCity3.getSelectedItem().toString();
        City city = cityDir.findCityFromName(selectedCity);

        for (Community c : commDir.findCommunitiesInCity(city)) {
            commComboBox.addElement(c.getCommName());
        }

        comboBoxSelectComm1.setModel(commComboBox);
    }//GEN-LAST:event_comboBoxSelectCity3ActionPerformed

    private void btnAddHouse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHouse1ActionPerformed
        // TODO add your handling code here:

        String newHouse = txtHouse1.getText();
        String selectedComm = comboBoxSelectComm1.getSelectedItem().toString();
        String selectedCity = comboBoxSelectCity3.getSelectedItem().toString();

        if (newHouse.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter House Name");
            return;
        }
        if ("Select".equals(selectedComm)) {
            JOptionPane.showMessageDialog(this, "Please select Community");
            return;
        }
        if ("Select".equals(selectedCity)) {
            JOptionPane.showMessageDialog(this, "Please select City");
            return;
        }

        Community comm = commDir.findCommunityFromName(selectedComm);
        House h = houseDir.addNewHouse();
        h.setHouseName(newHouse);
        h.setCommunity(comm);
        JOptionPane.showMessageDialog(this, "House Added Successfully");

        txtHouse1.setText("");
        comboBoxSelectCity3.setSelectedIndex(0);
        comboBoxSelectComm1.setSelectedIndex(0);
        populateResourcesTableCommAdmin();

    }//GEN-LAST:event_btnAddHouse1ActionPerformed

    private void comboBoxSelectComm1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxSelectComm1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSelectComm1MouseClicked

    private void comboBoxSelectComm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSelectComm1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSelectComm1ActionPerformed

    private void btnViewCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCity1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableCities1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view City");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableCities1.getModel();
        City selectedCity = (City) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtCityView1.setText(selectedCity.getCityName());

    }//GEN-LAST:event_btnViewCity1ActionPerformed

    private void btnUpdateCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCity1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableCities1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view City");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableCities1.getModel();
        City selectedCity = (City) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtCityView1.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid City");
            return;
        }

        selectedCity.setCityName(name);
        txtCityView1.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateResourcesTableCommAdmin();
        JOptionPane.showMessageDialog(this, "City updated");
    }//GEN-LAST:event_btnUpdateCity1ActionPerformed

    private void btnViewComm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewComm1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableComm1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Community");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableComm1.getModel();
        Community selectedComm = (Community) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtCommView1.setText(selectedComm.getCommName());
    }//GEN-LAST:event_btnViewComm1ActionPerformed

    private void btnUpdateComm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateComm1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableComm1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update Community");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableComm1.getModel();
        Community selectedComm = (Community) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtCommView1.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid City");
            return;
        }

        selectedComm.setCommName(name);
        txtCityView1.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateResourcesTableCommAdmin();
        JOptionPane.showMessageDialog(this, "Community updated");
    }//GEN-LAST:event_btnUpdateComm1ActionPerformed

    private void btnViewHouse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHouse1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHouses1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Houses");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHouses1.getModel();
        House selectedHouse = (House) model.getValueAt(selectedRowIndex, 0);

        //Set Data in View Panel
        txtHouseView1.setText(selectedHouse.getHouseName());
    }//GEN-LAST:event_btnViewHouse1ActionPerformed

    private void btnUpdateHouse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateHouse1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableHouses1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view House");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHouses1.getModel();
        House selectedHouse = (House) model.getValueAt(selectedRowIndex, 0);

        //Validation of Input Fields - START
        //Name
        String name = txtHouseView1.getText();
        if (name.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a valid House");
            return;
        }

        selectedHouse.setHouseName(name);
        txtHouseView1.setText("");
        //JOptionPane.showMessageDialog(this, "New Patient record added"+ " U = "+ p.get(0).getUsername()+ " P = "+ p.get(0).getPassword());
        populateResourcesTableCommAdmin();
        JOptionPane.showMessageDialog(this, "House updated");
    }//GEN-LAST:event_btnUpdateHouse1ActionPerformed

    private void btnDeleteCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCity1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableCities1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view City");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableCities1.getModel();
        City selectedCity = (City) model.getValueAt(selectedRowIndex, 0);

        cityDir.deleteCity(selectedCity);

        JOptionPane.showMessageDialog(this, "Selected City deleted");

        model.setRowCount(0);

        populateResourcesTableCommAdmin();

        //to set view profile fields blank when a record is deleted
        txtCityView1.setText("");
    }//GEN-LAST:event_btnDeleteCity1ActionPerformed

    private void btnDeleteComm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteComm1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableComm1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete Community");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableComm1.getModel();
        Community selectedcomm = (Community) model.getValueAt(selectedRowIndex, 0);

        commDir.deleteCommunity(selectedcomm);

        JOptionPane.showMessageDialog(this, "Selected Community deleted");

        model.setRowCount(0);

        populateResourcesTableCommAdmin();

        //to set view profile fields blank when a record is deleted
        txtCommView1.setText("");
    }//GEN-LAST:event_btnDeleteComm1ActionPerformed

    private void btnDeleteHouse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHouse1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int selectedRowIndex = tableHouses1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete House");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableHouses1.getModel();
        House selectedHouse = (House) model.getValueAt(selectedRowIndex, 0);

        houseDir.deleteHouse(selectedHouse);

        JOptionPane.showMessageDialog(this, "Selected House deleted");

        model.setRowCount(0);

        populateResourcesTableCommAdmin();

        //to set view profile fields blank when a record is deleted
        txtHouseView1.setText("");
    }//GEN-LAST:event_btnDeleteHouse1ActionPerformed

    private void txtRespRate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRespRate3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRespRate3ActionPerformed

    private void txtPusleRate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPusleRate3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPusleRate3ActionPerformed

    private void btnViewEncHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncHistActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tableEncHistory.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Encounter");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableEncHistory.getModel();
        Encounter selectedEnc = (Encounter) model.getValueAt(selectedRowIndex, 0);

        txtTemp3.setText(String.valueOf(selectedEnc.getVitalSign().getTemperature()));
        txtRespRate3.setText(String.valueOf(selectedEnc.getVitalSign().getRespirationRate()));
        txtBp3.setText(String.valueOf(selectedEnc.getVitalSign().getBloodPressure()));
        txtPusleRate3.setText(String.valueOf(selectedEnc.getVitalSign().getPulseRate()));

        //for date
        Date dt = selectedEnc.getEncounterDate();
        if (dt != null) {
            DateChooserEncDate3.setDate(dt);

        }

    }//GEN-LAST:event_btnViewEncHistActionPerformed

    private void btnEditEncHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEncHistActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableEncHistory.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view Encounter");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableEncHistory.getModel();
        Encounter selectedEnc = (Encounter) model.getValueAt(selectedRowIndex, 0);

        //validation
        String temp = txtTemp3.getText();
        if (temp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Temperature");
            return;
        }
        if (temp.length() > 0 && !temp.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Temperature can contain only Numeric values");
            return;
        }

        String rr = txtRespRate3.getText();
        if (rr.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Respiration Rate");
            return;
        }
        if (rr.length() > 0 && !rr.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Respiration Rate can contain only Numeric values");
            return;
        }

        String bp = txtBp3.getText();
        if (bp.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Blood Pressure");
            return;
        }
        if (bp.length() > 0 && !bp.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Blood Pressure can contain only Numeric values");
            return;
        }
        String pr = txtPusleRate3.getText();
        if (pr.length() <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter Pulse Rate");
            return;
        }
        if (pr.length() > 0 && !pr.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Pulse Rate can contain only Numeric values");
            return;
        }

        selectedEnc.getVitalSign().setTemperature(Short.parseShort(temp));
        selectedEnc.getVitalSign().setRespirationRate(Short.parseShort(rr));
        selectedEnc.getVitalSign().setBloodPressure(Integer.parseInt(bp));
        selectedEnc.getVitalSign().setPulseRate(Integer.parseInt(pr));

        //for date
        Date dt = DateChooserEncDate3.getDate();
        if (dt == null) {
            JOptionPane.showMessageDialog(this, "Please enter Date");
            return;

        }
        selectedEnc.setEncounterDate(dt);

        JOptionPane.showMessageDialog(this, "Encounter is updated");

        // view updated enc hist 
        EncounterHistory selectedPatient = selectedPatientEncHist;
        DefaultTableModel encTableModel1 = (DefaultTableModel) tableEncHistory.getModel();
        encTableModel1.setRowCount(0);

        for (Encounter en : selectedPatient.getEncounterHist()) {

            Object[] row = new Object[5];
            row[0] = en;
            row[1] = en.getVitalSign().getBloodPressure();
            row[2] = en.getVitalSign().getRespirationRate();
            row[3] = en.getVitalSign().getPulseRate();
            row[4] = en.getEncounterDate();

            encTableModel1.addRow(row);

        }

        txtTemp3.setText("");
        txtRespRate3.setText("");
        txtBp3.setText("");
        txtPusleRate3.setText("");
        DateChooserEncDate3.setDate(null);
    }//GEN-LAST:event_btnEditEncHistActionPerformed

    private void btnDeleteEncHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEncHistActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tableEncHistory.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete Encounter");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableEncHistory.getModel();
        Encounter selectedEnc = (Encounter) model.getValueAt(selectedRowIndex, 0);

        selectedPatientEncHist.deleteEncounter(selectedEnc);

        JOptionPane.showMessageDialog(this, "Encounter deleted");

        // view updated enc hist 
        EncounterHistory selectedPatient = selectedPatientEncHist;
        DefaultTableModel encTableModel1 = (DefaultTableModel) tableEncHistory.getModel();
        encTableModel1.setRowCount(0);

        for (Encounter en : selectedPatient.getEncounterHist()) {

            Object[] row = new Object[5];
            row[0] = en;
            row[1] = en.getVitalSign().getBloodPressure();
            row[2] = en.getVitalSign().getRespirationRate();
            row[3] = en.getVitalSign().getPulseRate();
            row[4] = en.getEncounterDate();

            encTableModel1.addRow(row);

        }

        txtTemp3.setText("");
        txtRespRate3.setText("");
        txtBp3.setText("");
        txtPusleRate3.setText("");
        DateChooserEncDate3.setDate(null);

    }//GEN-LAST:event_btnDeleteEncHistActionPerformed
    private void populateTablePatient() {

        DefaultTableModel model = (DefaultTableModel) tablePatients.getModel();
        model.setRowCount(0);

        for (Patient p : patientDir.getPatientList()) {

            Object[] row = new Object[7];
            row[0] = p;
            row[1] = p.getAge();
            row[2] = p.getEmail();
            row[3] = p.getPhoneNo();
            row[4] = p.getGender();
            row[5] = p.getHouse().getCommunity().getCity().getCityName();
            //int index = p.getEncounterHist().getEncounterHist().size();
            //row[6] = p.getEncounterHist().getEncounterHist().get(index).getIsSick();
            row[6] = p.getHouse().getCommunity().getCommName();
            model.addRow(row);

        }

    }

    private void populateTablePatientHospAdmin() {

        DefaultTableModel model = (DefaultTableModel) tablePatients1.getModel();
        model.setRowCount(0);

        for (Patient p : patientDir.getPatientList()) {

            Object[] row = new Object[7];
            row[0] = p;
            row[1] = p.getAge();
            row[2] = p.getEmail();
            row[3] = p.getPhoneNo();
            row[4] = p.getGender();
            row[5] = p.getHouse().getCommunity().getCity().getCityName();
            //int index = p.getEncounterHist().getEncounterHist().size();
            //row[6] = p.getEncounterHist().getEncounterHist().get(index).getIsSick();
            row[6] = p.getHouse().getCommunity().getCommName();
            model.addRow(row);

        }

    }

    private void populateTableDoctor() {

        DefaultTableModel model = (DefaultTableModel) tableDoc.getModel();
        model.setRowCount(0);

        for (Doctor d : docDir.getDocList()) {

            Object[] row = new Object[7];
            row[0] = d;
            row[1] = d.getAge();
            row[2] = d.getEmail();
            row[3] = d.getPhoneNo();
            row[4] = d.getGender();
            row[5] = d.getDocId();
            row[6] = d.getHospital().getHospitalName();

            model.addRow(row);

        }

    }

    private void populateTableDoctorHospAdmin() {

        DefaultTableModel model = (DefaultTableModel) tableDoc1.getModel();
        model.setRowCount(0);

        for (Doctor d : docDir.getDocList()) {

            Object[] row = new Object[7];
            row[0] = d;
            row[1] = d.getAge();
            row[2] = d.getEmail();
            row[3] = d.getPhoneNo();
            row[4] = d.getGender();
            row[5] = d.getDocId();
            row[6] = d.getHospital().getHospitalName();

            model.addRow(row);

        }

    }

    private void populateTableHospitals() {

        DefaultTableModel model = (DefaultTableModel) tableHospitals.getModel();
        model.setRowCount(0);

        for (Hospital h : hospDir.getHospitalDirectory()) {

            Object[] row = new Object[3];
            row[0] = h;
            row[1] = h.getCommunity();
            row[2] = h.getCity();

            model.addRow(row);

        }

    }

    private void populateTableHospitalsHospAdmin() {

        DefaultTableModel model = (DefaultTableModel) tableHospitals1.getModel();
        model.setRowCount(0);

        for (Hospital h : hospDir.getHospitalDirectory()) {

            Object[] row = new Object[3];
            row[0] = h;
            row[1] = h.getCommunity();
            row[2] = h.getCity();

            model.addRow(row);

        }

    }

    private void populateTablesForPatient() {

        DefaultTableModel model = (DefaultTableModel) tblHospList.getModel();
        model.setRowCount(0);

        for (Hospital h : hospDir.getHospitalDirectory()) {

            Object[] row = new Object[3];
            row[0] = h;
            row[1] = h.getCommunity();
            row[2] = h.getCity();

            model.addRow(row);

        }

        DefaultTableModel model1 = (DefaultTableModel) tblDocList.getModel();
        model1.setRowCount(0);

        for (Doctor d : docDir.getDocList()) {

            Object[] row = new Object[4];
            row[0] = d;
            row[1] = d.getEmail();
            row[2] = d.getPhoneNo();
            row[3] = d.getHospital();

            model1.addRow(row);

        }

        //nearby docs
        Patient pat = loginPatient;
        City city = pat.getHouse().getCommunity().getCity();

        DefaultTableModel model2 = (DefaultTableModel) tblDocList.getModel();
        model2.setRowCount(0);

        for (Doctor d : docDir.getDocList()) {

            if (d.getHospital().getCity() == city) {

                Object[] row = new Object[4];
                row[0] = d;
                row[1] = d.getEmail();
                row[2] = d.getPhoneNo();
                row[3] = d.getHospital();

                model2.addRow(row);
            }

        }

    }

    private void populateResourcesTable() {

        // city table
        DefaultTableModel model = (DefaultTableModel) tableCities.getModel();
        model.setRowCount(0);

        for (City c : cityDir.getCityDirectory()) {

            Object[] row = new Object[1];
            row[0] = c;

            model.addRow(row);

        }

        // community table
        DefaultTableModel modelComm = (DefaultTableModel) tableComm.getModel();
        modelComm.setRowCount(0);

        for (Community c : commDir.getCommunityDirectory()) {

            Object[] row = new Object[2];
            row[0] = c;
            row[1] = c.getCity().getCityName();

            modelComm.addRow(row);

        }

        // House table
        DefaultTableModel modelHouse = (DefaultTableModel) tableHouses.getModel();
        modelHouse.setRowCount(0);

        for (House h : houseDir.getHouseDirectory()) {

            Object[] row = new Object[3];
            row[0] = h;
            row[1] = h.getCommunity().getCommName();
            row[2] = h.getCommunity().getCity().getCityName();

            modelHouse.addRow(row);

        }

    }

    private void populateResourcesTableCommAdmin() {

        // city table
        DefaultTableModel model = (DefaultTableModel) tableCities1.getModel();
        model.setRowCount(0);

        for (City c : cityDir.getCityDirectory()) {

            Object[] row = new Object[1];
            row[0] = c;

            model.addRow(row);

        }

        // community table
        DefaultTableModel modelComm = (DefaultTableModel) tableComm1.getModel();
        modelComm.setRowCount(0);

        for (Community c : commDir.getCommunityDirectory()) {

            Object[] row = new Object[2];
            row[0] = c;
            row[1] = c.getCity().getCityName();

            modelComm.addRow(row);

        }

        // House table
        DefaultTableModel modelHouse = (DefaultTableModel) tableHouses1.getModel();
        modelHouse.setRowCount(0);

        for (House h : houseDir.getHouseDirectory()) {

            Object[] row = new Object[3];
            row[0] = h;
            row[1] = h.getCommunity().getCommName();
            row[2] = h.getCommunity().getCity().getCityName();

            modelHouse.addRow(row);

        }

    }

    private void fillDoctorProfile(Doctor doc) {

        //Set Data in View Panel
        txtNameD.setText(doc.getName());
        txtAgeD.setText(String.valueOf(doc.getAge()));
        txtEmailD.setText(doc.getEmail());
        txtPhoneNoD.setText(String.valueOf(doc.getPhoneNo()));
        txtEmailD.setText(doc.getEmail());
        txtDocIdD.setText(String.valueOf(doc.getDocId()));
        txtUsernameD.setText(doc.getUsername());
        txtPassD.setText(doc.getUsername());

        // add hospitals in combobox
        DefaultComboBoxModel hospComboBox = new DefaultComboBoxModel();
        hospComboBox.addElement("Select");

        for (Hospital c : hospDir.getHospitalDirectory()) {
            hospComboBox.addElement(c.getHospitalName());
        }
        comboBoxHospD.setModel(hospComboBox);

        // Select Hospital
        //Set Gender
        String currentGender = doc.getGender();
        for (int i = 0; i < comboBoxgenderD.getItemCount(); i++) {
            String item = comboBoxgenderD.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxgenderD.setSelectedIndex(i);
                break;
            }
        }

        //Set Hospital
        String hosp = doc.getHospital().getHospitalName();
        for (int i = 0; i < comboBoxHospD.getItemCount(); i++) {
            String item = comboBoxHospD.getItemAt(i);
            //(ComboItem)comboBox.getItemAt(i);
            if (item.equalsIgnoreCase(hosp)) {
                comboBoxHospD.setSelectedIndex(i);
                break;
            }
        }
    }

    private void fillHospAdminProfile(HospitalAdmin hospAdmin) {

        txtNameHA.setText(hospAdmin.getName());
        txtAgeHA.setText(String.valueOf(hospAdmin.getAge()));
        txtEmailHA.setText(hospAdmin.getEmail());
        txtPhoneNoHA.setText(String.valueOf(hospAdmin.getPhoneNo()));
        txtEmailHA.setText(hospAdmin.getEmail());
        txtUsernameHA.setText(hospAdmin.getUsername());
        txtPassHA.setText(hospAdmin.getPassword());

        //Set Gender
        String currentGender = hospAdmin.getGender();
        for (int i = 0; i < comboBoxgenderHA.getItemCount(); i++) {
            String item = comboBoxgenderHA.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxgenderHA.setSelectedIndex(i);
                break;
            }
        }

    }

    private void fillCommAdminProfile(CommunityAdmin commAdmin) {

        txtNameCA.setText(commAdmin.getName());
        txtAgeCA.setText(String.valueOf(commAdmin.getAge()));
        txtEmailCA.setText(commAdmin.getEmail());
        txtPhoneNoCA.setText(String.valueOf(commAdmin.getPhoneNo()));
        txtEmailCA.setText(commAdmin.getEmail());
        txtUsernameCA.setText(commAdmin.getUsername());
        txtPassCA.setText(commAdmin.getPassword());

        //Set Gender
        String currentGender = commAdmin.getGender();
        for (int i = 0; i < comboBoxgenderCA.getItemCount(); i++) {
            String item = comboBoxgenderCA.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxgenderCA.setSelectedIndex(i);
                break;
            }
        }

    }

    private void populatePatients() {

        // add patients in combobox
        DefaultComboBoxModel patComboBox = new DefaultComboBoxModel();
        patComboBox.addElement("Select");

        for (Patient p : patientDir.getPatientList()) {
            patComboBox.addElement(p);
        }

        comboBoxDocPat.setModel(patComboBox);
    }

    private void logout() {
        pnlHome.setVisible(true);
        pnlPatient.setVisible(false);
        pnlDoctor.setVisible(false);
        pnlSysAdmin.setVisible(false);
        pnlCommunityAdmin.setVisible(false);
        pnlHospitalAdmin.setVisible(false);
    }

    private void fillPatientProfile(Patient pat) {

        txtNameP.setText(pat.getName());
        txtAgeP.setText(String.valueOf(pat.getAge()));
        txtEmailP.setText(pat.getEmail());
        txtPhoneNoP.setText(String.valueOf(pat.getPhoneNo()));
        txtEmailP.setText(pat.getEmail());
        txtPatientIdP.setText(String.valueOf(pat.getPatientId()));
        txtUsernameP.setText(pat.getUsername());

        //Set Gender
        String currentGender = pat.getGender();
        for (int i = 0; i < comboBoxgenderP.getItemCount(); i++) {
            String item = comboBoxgenderP.getItemAt(i);
            if (item.equalsIgnoreCase(currentGender)) {
                comboBoxgenderP.setSelectedIndex(i);
                break;
            }
        }

    }

    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."
                + "[a-zA-Z0-9_+&*-]+)*@"
                + "(?:[a-zA-Z0-9-]+\\.)+[a-z"
                + "A-Z]{2,7}$";

        Pattern pat = Pattern.compile(emailRegex);
        if (email == null) {
            return false;
        }
        return pat.matcher(email).matches();
    }

    private void fillEncounterDetails(Patient pat) {

        EncounterHistory encHis = pat.getEncounterHist();
        int len = encHis.getEncounterHist().size();

        if (len <= 0) {
            return;
        }
        Encounter latestEnc = encHis.getEncounterHist().get(len - 1);
        VitalSigns latestVs = latestEnc.getVitalSign();

        txtTemp2.setText(String.valueOf(latestVs.getTemperature()));
        txtBp2.setText(String.valueOf(latestVs.getBloodPressure()));
        txtRespRate2.setText(String.valueOf(latestVs.getRespirationRate()));
        txtPusleRate2.setText(String.valueOf(latestVs.getPulseRate()));

        Date date = latestEnc.getEncounterDate();
        //SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        //String formattedDate = sfd.format(date) ;
        if (date != null) {
            dateChooserPatPanel.setDate(date);
        } else {
            dateChooserPatPanel.setDate(null);
        }

        //populate encounter table
        DefaultTableModel encTableModel = (DefaultTableModel) tableEncHistory2.getModel();
        encTableModel.setRowCount(0);

        for (Encounter en : pat.getEncounterHist().getEncounterHist()) {

//            try{
            Object[] row = new Object[7];

            row[0] = en.getVitalSign().getTemperature();
            row[1] = en.getVitalSign().getBloodPressure();
            row[2] = en.getVitalSign().getRespirationRate();
            row[3] = en.getVitalSign().getPulseRate();
            row[4] = en.getEncounterDate().toString();
            row[5] = en.getEncDoc().getName();
            row[6] = en.getIsSick();

            encTableModel.addRow(row);
//            }
//            catch (Exception e){
//                
//            }

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooserEncDate;
    private com.toedter.calendar.JDateChooser DateChooserEncDate1;
    private com.toedter.calendar.JDateChooser DateChooserEncDate2;
    private com.toedter.calendar.JDateChooser DateChooserEncDate3;
    private javax.swing.JButton btnAddCity;
    private javax.swing.JButton btnAddCity1;
    private javax.swing.JButton btnAddCom;
    private javax.swing.JButton btnAddCom1;
    private javax.swing.JButton btnAddHosp;
    private javax.swing.JButton btnAddHosp1;
    private javax.swing.JButton btnAddHouse;
    private javax.swing.JButton btnAddHouse1;
    private javax.swing.JButton btnCreateCommAdmin;
    private javax.swing.JButton btnCreateD;
    private javax.swing.JButton btnCreateD1;
    private javax.swing.JButton btnCreateDoc;
    private javax.swing.JButton btnCreateDoc1;
    private javax.swing.JButton btnCreateHA;
    private javax.swing.JButton btnCreateHA1;
    private javax.swing.JButton btnCreateHospAdmin;
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.JButton btnCreatePatient1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnDeleteCity;
    private javax.swing.JButton btnDeleteCity1;
    private javax.swing.JButton btnDeleteComm;
    private javax.swing.JButton btnDeleteComm1;
    private javax.swing.JButton btnDeleteDoc;
    private javax.swing.JButton btnDeleteDoc1;
    private javax.swing.JButton btnDeleteEncHist;
    private javax.swing.JButton btnDeleteHosp;
    private javax.swing.JButton btnDeleteHosp1;
    private javax.swing.JButton btnDeleteHouse;
    private javax.swing.JButton btnDeleteHouse1;
    private javax.swing.JButton btnEditEncHist;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnLogout1;
    private javax.swing.JButton btnLogout2;
    private javax.swing.JButton btnLogout3;
    private javax.swing.JButton btnLogout4;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSaveEdits;
    private javax.swing.JButton btnSaveEdits1;
    private javax.swing.JButton btnUpdateCity;
    private javax.swing.JButton btnUpdateCity1;
    private javax.swing.JButton btnUpdateComm;
    private javax.swing.JButton btnUpdateComm1;
    private javax.swing.JButton btnUpdateHosp;
    private javax.swing.JButton btnUpdateHosp1;
    private javax.swing.JButton btnUpdateHouse;
    private javax.swing.JButton btnUpdateHouse1;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnView1;
    private javax.swing.JButton btnViewCity;
    private javax.swing.JButton btnViewCity1;
    private javax.swing.JButton btnViewComm;
    private javax.swing.JButton btnViewComm1;
    private javax.swing.JButton btnViewDoc;
    private javax.swing.JButton btnViewDoc1;
    private javax.swing.JButton btnViewEncHist;
    private javax.swing.JButton btnViewHosp;
    private javax.swing.JButton btnViewHosp1;
    private javax.swing.JButton btnViewHouse;
    private javax.swing.JButton btnViewHouse1;
    private javax.swing.JComboBox<String> comboBoxCity;
    private javax.swing.JComboBox<String> comboBoxCity1;
    private javax.swing.JComboBox<String> comboBoxComm;
    private javax.swing.JComboBox<String> comboBoxComm1;
    private javax.swing.JComboBox<String> comboBoxDocPat;
    private javax.swing.JComboBox<String> comboBoxGenderDoc;
    private javax.swing.JComboBox<String> comboBoxGenderDoc1;
    private javax.swing.JComboBox<String> comboBoxHosp;
    private javax.swing.JComboBox<String> comboBoxHosp1;
    private javax.swing.JComboBox<String> comboBoxHospCity;
    private javax.swing.JComboBox<String> comboBoxHospCity1;
    private javax.swing.JComboBox<String> comboBoxHospComm;
    private javax.swing.JComboBox<String> comboBoxHospComm1;
    private javax.swing.JComboBox<String> comboBoxHospD;
    private javax.swing.JComboBox<String> comboBoxHouse;
    private javax.swing.JComboBox<String> comboBoxHouse1;
    private javax.swing.JComboBox<String> comboBoxLogin;
    private javax.swing.JComboBox<String> comboBoxSelectCity;
    private javax.swing.JComboBox<String> comboBoxSelectCity1;
    private javax.swing.JComboBox<String> comboBoxSelectCity2;
    private javax.swing.JComboBox<String> comboBoxSelectCity3;
    private javax.swing.JComboBox<String> comboBoxSelectComm;
    private javax.swing.JComboBox<String> comboBoxSelectComm1;
    private javax.swing.JComboBox<String> comboBoxgender;
    private javax.swing.JComboBox<String> comboBoxgender1;
    private javax.swing.JComboBox<String> comboBoxgenderCA;
    private javax.swing.JComboBox<String> comboBoxgenderD;
    private javax.swing.JComboBox<String> comboBoxgenderHA;
    private javax.swing.JComboBox<String> comboBoxgenderP;
    private com.toedter.calendar.JDateChooser dateChooserPatPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblAge2;
    private javax.swing.JLabel lblAge3;
    private javax.swing.JLabel lblAge4;
    private javax.swing.JLabel lblAge5;
    private javax.swing.JLabel lblAge6;
    private javax.swing.JLabel lblAge7;
    private javax.swing.JLabel lblBp;
    private javax.swing.JLabel lblBp1;
    private javax.swing.JLabel lblBp2;
    private javax.swing.JLabel lblBp3;
    private javax.swing.JLabel lblBp4;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity1;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunity1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDate1;
    private javax.swing.JLabel lblDate2;
    private javax.swing.JLabel lblDate3;
    private javax.swing.JLabel lblDate4;
    private javax.swing.JLabel lblDocId;
    private javax.swing.JLabel lblDocId1;
    private javax.swing.JLabel lblDocId2;
    private javax.swing.JLabel lblDocId4;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblEmail2;
    private javax.swing.JLabel lblEmail3;
    private javax.swing.JLabel lblEmail4;
    private javax.swing.JLabel lblEmail5;
    private javax.swing.JLabel lblEmail6;
    private javax.swing.JLabel lblEmail7;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender1;
    private javax.swing.JLabel lblGender2;
    private javax.swing.JLabel lblGender3;
    private javax.swing.JLabel lblGender4;
    private javax.swing.JLabel lblGender5;
    private javax.swing.JLabel lblGender6;
    private javax.swing.JLabel lblGender7;
    private javax.swing.JLabel lblHosp;
    private javax.swing.JLabel lblHosp1;
    private javax.swing.JLabel lblHosp2;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblHouse1;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblLogin1;
    private javax.swing.JLabel lblLoginAs;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblName4;
    private javax.swing.JLabel lblName5;
    private javax.swing.JLabel lblName6;
    private javax.swing.JLabel lblName7;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPass1;
    private javax.swing.JLabel lblPass2;
    private javax.swing.JLabel lblPass3;
    private javax.swing.JLabel lblPass4;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblPatientId1;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblPhoneNo1;
    private javax.swing.JLabel lblPhoneNo2;
    private javax.swing.JLabel lblPhoneNo3;
    private javax.swing.JLabel lblPhoneNo4;
    private javax.swing.JLabel lblPhoneNo5;
    private javax.swing.JLabel lblPhoneNo6;
    private javax.swing.JLabel lblPhoneNo7;
    private javax.swing.JLabel lblPusleRate;
    private javax.swing.JLabel lblPusleRate1;
    private javax.swing.JLabel lblPusleRate2;
    private javax.swing.JLabel lblPusleRate3;
    private javax.swing.JLabel lblPusleRate4;
    private javax.swing.JLabel lblRespRate;
    private javax.swing.JLabel lblRespRate1;
    private javax.swing.JLabel lblRespRate2;
    private javax.swing.JLabel lblRespRate3;
    private javax.swing.JLabel lblRespRate4;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JLabel lblTemp1;
    private javax.swing.JLabel lblTemp2;
    private javax.swing.JLabel lblTemp3;
    private javax.swing.JLabel lblTemp4;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsername1;
    private javax.swing.JLabel lblUsername2;
    private javax.swing.JLabel lblUsername3;
    private javax.swing.JLabel lblUsername4;
    private javax.swing.JLabel lblUsernameDoc;
    private javax.swing.JLabel lblUsernameDoc1;
    private javax.swing.JLabel lblUsernamePat;
    private javax.swing.JLabel lblUsernamePat1;
    private javax.swing.JPanel pnlCommunityAdmin;
    private javax.swing.JPanel pnlDoctor;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlHospitalAdmin;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlMenuBar;
    private javax.swing.JPanel pnlMenuBar1;
    private javax.swing.JPanel pnlPatient;
    private javax.swing.JPanel pnlSysAdmin;
    private javax.swing.JPanel pnlWorkArea;
    private javax.swing.JPanel pnlWorkArea1;
    private javax.swing.JScrollPane scrollPanePatient;
    private javax.swing.JScrollPane scrollPanePatient1;
    private javax.swing.JScrollPane scrollPanePatient2;
    private javax.swing.JScrollPane scrollPanePatient3;
    private javax.swing.JSplitPane splitPaneSystemAdmin;
    private javax.swing.JSplitPane splitPaneSystemAdmin1;
    private javax.swing.JPanel tabCreatePerson;
    private javax.swing.JPanel tabCreatePerson1;
    private javax.swing.JPanel tabCreateResources;
    private javax.swing.JPanel tabCreateResources1;
    private javax.swing.JPanel tabManageDoc;
    private javax.swing.JPanel tabManageDoc1;
    private javax.swing.JPanel tabManageHospitals;
    private javax.swing.JPanel tabManageHospitals1;
    private javax.swing.JPanel tabManagePatient;
    private javax.swing.JPanel tabManagePatient1;
    private javax.swing.JPanel tabManageResources;
    private javax.swing.JPanel tabManageResources1;
    private javax.swing.JTable tableCities;
    private javax.swing.JTable tableCities1;
    private javax.swing.JTable tableComm;
    private javax.swing.JTable tableComm1;
    private javax.swing.JTable tableDoc;
    private javax.swing.JTable tableDoc1;
    private javax.swing.JTable tableEncHistory;
    private javax.swing.JTable tableEncHistory1;
    private javax.swing.JTable tableEncHistory2;
    private javax.swing.JTable tableEncHistory4;
    private javax.swing.JTable tableHospitals;
    private javax.swing.JTable tableHospitals1;
    private javax.swing.JTable tableHouses;
    private javax.swing.JTable tableHouses1;
    private javax.swing.JTable tablePatients;
    private javax.swing.JTable tablePatients1;
    private javax.swing.JTable tblDocList;
    private javax.swing.JTable tblHospList;
    private javax.swing.JTable tblNearbyDoc;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAge1;
    private javax.swing.JTextField txtAgeCA;
    private javax.swing.JTextField txtAgeD;
    private javax.swing.JTextField txtAgeDoc;
    private javax.swing.JTextField txtAgeDoc1;
    private javax.swing.JTextField txtAgeHA;
    private javax.swing.JTextField txtAgeP;
    private javax.swing.JTextField txtBp;
    private javax.swing.JTextField txtBp1;
    private javax.swing.JTextField txtBp2;
    private javax.swing.JTextField txtBp3;
    private javax.swing.JTextField txtBp4;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtCityView;
    private javax.swing.JTextField txtCityView1;
    private javax.swing.JTextField txtComm;
    private javax.swing.JTextField txtComm1;
    private javax.swing.JTextField txtCommView;
    private javax.swing.JTextField txtCommView1;
    private javax.swing.JTextField txtDocId;
    private javax.swing.JTextField txtDocId1;
    private javax.swing.JTextField txtDocIdD;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmail1;
    private javax.swing.JTextField txtEmailCA;
    private javax.swing.JTextField txtEmailD;
    private javax.swing.JTextField txtEmailDoc;
    private javax.swing.JTextField txtEmailDoc1;
    private javax.swing.JTextField txtEmailHA;
    private javax.swing.JTextField txtEmailP;
    private javax.swing.JTextField txtHospView;
    private javax.swing.JTextField txtHospView1;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtHospitalName1;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtHouse1;
    private javax.swing.JTextField txtHouseView;
    private javax.swing.JTextField txtHouseView1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtNameCA;
    private javax.swing.JTextField txtNameD;
    private javax.swing.JTextField txtNameDoc;
    private javax.swing.JTextField txtNameDoc1;
    private javax.swing.JTextField txtNameHA;
    private javax.swing.JTextField txtNameP;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtPassCA;
    private javax.swing.JTextField txtPassD;
    private javax.swing.JTextField txtPassHA;
    private javax.swing.JTextField txtPassP;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientId1;
    private javax.swing.JTextField txtPatientIdP;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPhoneNo1;
    private javax.swing.JTextField txtPhoneNoCA;
    private javax.swing.JTextField txtPhoneNoD;
    private javax.swing.JTextField txtPhoneNoDoc;
    private javax.swing.JTextField txtPhoneNoDoc1;
    private javax.swing.JTextField txtPhoneNoHA;
    private javax.swing.JTextField txtPhoneNoP;
    private javax.swing.JTextField txtPusleRate;
    private javax.swing.JTextField txtPusleRate1;
    private javax.swing.JTextField txtPusleRate2;
    private javax.swing.JTextField txtPusleRate3;
    private javax.swing.JTextField txtPusleRate4;
    private javax.swing.JTextField txtRespRate;
    private javax.swing.JTextField txtRespRate1;
    private javax.swing.JTextField txtRespRate2;
    private javax.swing.JTextField txtRespRate3;
    private javax.swing.JTextField txtRespRate4;
    private javax.swing.JTextField txtTemp;
    private javax.swing.JTextField txtTemp1;
    private javax.swing.JTextField txtTemp2;
    private javax.swing.JTextField txtTemp3;
    private javax.swing.JTextField txtTemp4;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtUsernameCA;
    private javax.swing.JTextField txtUsernameD;
    private javax.swing.JTextField txtUsernameDoc;
    private javax.swing.JTextField txtUsernameDoc1;
    private javax.swing.JTextField txtUsernameHA;
    private javax.swing.JTextField txtUsernameP;
    private javax.swing.JTextField txtUsernamePat;
    private javax.swing.JTextField txtUsernamePat1;
    // End of variables declaration//GEN-END:variables
}
